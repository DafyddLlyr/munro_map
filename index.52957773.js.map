{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/has.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults.js","node_modules/process/browser.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","module.exports = {\n  \"version\": \"0.24.0\"\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","module.exports = require('./lib/axios');","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","\nimport { Feature, Map, View } from 'ol';\nimport Overlay from 'ol/Overlay';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport axios from 'axios';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Coordinate } from 'ol/coordinate';\nimport Geometry from 'ol/geom/Geometry';\nimport RenderFeature from 'ol/render/Feature';\nimport { Fill, RegularShape, Stroke, Style } from 'ol/style';\n\nconst container = document.getElementById('popup') as HTMLElement;\nconst content = document.getElementById('popup-content') as HTMLElement;\nconst closer = document.getElementById('popup-closer') as HTMLElement;\nconst infoModal = document.getElementById('info-modal') as HTMLElement;\nconst infoButton = document.getElementById('info') as HTMLElement;\n\nconst munros: Feature<Point>[] = []\n\nconst bgLayer = new TileLayer({\n  source: new XYZ({\n    url: \"https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=IGPIexDjG8gGAkN35tKd3VoLnFKykGsG\",\n    crossOrigin: '*'\n  }),\n})\n\ninfoButton.onclick = (e) => infoModal.classList.toggle('info-visible');\ninfoModal.onclick = (e) => infoModal.classList.toggle('info-visible');\n\nconst map = new Map({\n  target: 'map',\n  layers: [bgLayer],\n  view: new View({\n    projection: 'EPSG:3857',\n    minZoom: 8,\n    maxZoom: 20,\n    center: fromLonLat([-5.082808, 56.984374]),\n    zoom: 8\n  })\n});\n\nmap.on(\"click\", (e) => {\n  map.forEachFeatureAtPixel(e.pixel, (feature, layer) => {\n    setupPopup(e.coordinate, feature);\n    map.addOverlay(popup);\n  })\n});\n\nconst popup = new Overlay({\n  element: container,\n  autoPan: true,\n  autoPanAnimation: {\n    duration: 250,\n  },\n});\n\ncloser.onclick = () => {\n  popup.setPosition(undefined);\n  closer!.blur();\n  return false;\n};\n\nconst setupPopup = (coord: Coordinate, feature: RenderFeature | Feature<Geometry>) => {\n  popup.setPosition(coord);\n  const props = feature.getProperties()\n  const munroDetails = `\n    <div class=\"munro-details\">\n      <h2 class=\"munro-name\">${props.name}</h2>\n      <hr />\n      <p><b>Height:</b> <span>${props.height}m</span></p>\n      <p><b>Region:</b> <span>${props.region}</span></p>\n      <p><b>Lat Long:</b> <span>${props.latlng_lat}, ${props.latlng_lng}</span></p>\n      <p><b>Grid Ref:</b> <span>${props.gridref_letters} ${props.gridref_eastings} ${props.gridref_northings}</span></p>\n      <p><b>Meaning:</b> <span>${props.meaning}</span></p>\n    </div>\n    `\n  content!.innerHTML = munroDetails;\n}\n\nconst buildMunroFeature = (munro: { [key: string]: any }) => (\n  new Feature({\n    geometry: new Point(fromLonLat([munro.latlng_lng, munro.latlng_lat])),\n    ...munro\n  })\n)\n\nconst munroStyle = new Style({\n  image: new RegularShape({\n    fill: new Fill({\n      color: '#8bc34a'\n    }),\n    stroke: new Stroke({\n      color: 'black'\n    }),\n    points: 3,\n    radius: 10,\n  }),\n})\n\naxios.get(\"https://munroapi.herokuapp.com/munros\").then(\n  response => {\n    response.data.forEach((munro: { [key: string]: any }) => {\n      const munroFeature = buildMunroFeature(munro)\n      munros.push(munroFeature)\n    })\n\n    const munroLayer = new VectorLayer({\n      source: new VectorSource({\n        features: munros,\n      }),\n      style: munroStyle,\n    })\n\n    map.addLayer(munroLayer)\n  }\n);"],"names":["$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$3dc3825e79de4e26$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","$106eee51eb5027f3$export$1f4f991ce94838ce","begin","end","tmp","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","push","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$360d9a9621464d34$export$9099ad97b570f7c","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","changed","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$5871a677c2d47110$exports","default","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$4a6933b8a2a12a45$export$9099ad97b570f7c","AssertionError","code","message","split","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","$6074b396fc14353d$export$7cf753b6a6534915","styles_1","getZIndex","$6074b396fc14353d$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$6074b396fc14353d$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$8f7fdb7cfb75e879$exports","$ea4701d35a7bcfcb$var$transformStringDiv","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","match","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","options","defineProperty","window","error","$ea4701d35a7bcfcb$export$77f8d2fc923b14e3","transform","c","d","e","f","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","coordinate","x","y","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","mat","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","extent","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$14e1765886db335a","opt_extent","$4b239fe5fbbd9442$export$d6a0542127b96c83","slice","$4b239fe5fbbd9442$export$c7d6a927f416dd39","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$4f55e2d709659e7b","extent1","extent2","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$4b239fe5fbbd9442$var$_boundingExtentXYs","$1cba8f77b2fc8147$export$4b8705656de00c72","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","t","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","PI","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$1cba8f77b2fc8147$export$3497369f53ce744c","decimals","factor","pow","round","$1cba8f77b2fc8147$export$88807bfbd2f98762","floor","$1cba8f77b2fc8147$export$bc09dedfee4dad59","ceil","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$4a3eb4cf07e68bcb$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","map","Number","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$e2ca19531263975f$var$getKey","setSize","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$a91eb7d9c06d6003$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$a979859450d27aab$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","zoom","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","cosAngle","sinAngle","$04466ada99459d91$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$04466ada99459d91$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$c8891acc328b159c$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$ffba12b1b1caac35$var$__extends","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$eb83c055c71b92dc$export$e04cd5eb7e7428c6","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$e938c51870f186d7$export$954ce77093b0d494","element","offsetWidth","marginLeft","marginRight","$e938c51870f186d7$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","$e938c51870f186d7$export$f0994cfd84ab1152","lastChild","$3f8842a01a05d29f$export$6ad0413f8fea3c71","$3f8842a01a05d29f$export$70c5a077e5d6beb9","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","measureElement","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","$3f8842a01a05d29f$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$3f8842a01a05d29f$export$a2bf16790cd8f004","metrics","$3f8842a01a05d29f$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$3f8842a01a05d29f$export$4b2ca35321179b27","$3f8842a01a05d29f$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$3f8842a01a05d29f$var$executeLabelInstructions","drawImage","restore","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","event_1","$ffba12b1b1caac35$exports","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","getDataAtPixel","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$3bf57b305f2befe1$export$88ab4fe370923b6f","GroupEvent","$3bf57b305f2befe1$var$__extends","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$1eec589ef9f03c3a$export$9099ad97b570f7c","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$617763bc4bd20684$export$9099ad97b570f7c","$9e10b55cc3e5aff2$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","CENTER","RESOLUTION","ROTATION","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$fa384abe43b1f395$var$showCoordinateWarning","$fa384abe43b1f395$export$95cd20be0944d6c1","opt_disable","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$13550698a4b6771e","opt_projection","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$352fd07bdd93dc1e","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$a7d473ff80a6a3b","$fa384abe43b1f395$export$f87215506b474b9e","$fa384abe43b1f395$export$30407c756b1c3707","sourceUnits","userUnits","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$49a9dfb608ce5f95$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","jj","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$3185dd1b8645ed57$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","ret","$1c34f05d540d121d$export$40f3d9558cf6e846","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","$7f90c67a94ff7584$var$removeLayerMapProperty","$3bf57b305f2befe1$exports","$7f90c67a94ff7584$var$setLayerMapProperty","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$85c0a5b12bf0966d$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","charCode","charCodeAt","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$070ebaa1cd5f7208$export$b403fbac94228e09","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$599cb9096c101a3c$export$9099ad97b570f7c","$28f1cbaddf44444c$var$Property","$28f1cbaddf44444c$export$9099ad97b570f7c","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$28f1cbaddf44444c$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$2afaec311bc855ad$export$9099ad97b570f7c","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$d3c91b778f21fae8$var$pixelContext","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$d3c91b778f21fae8$var$__extends","getImageData","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$7971363be443bf07$exports","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","$150b5bd0bfcaba04$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","$244f7fbdc76b1fe6$var$__extends","getImage","getPixelRatio","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$244f7fbdc76b1fe6$exports","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$9d0a6d02ef4dbef8$exports","listenImage","$150b5bd0bfcaba04$exports","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$0cb8fe90b044c3b8$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$0cb8fe90b044c3b8$export$d5910341da1548ba","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","closePath","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$1cba8f77b2fc8147$export$27dc5719ceda6735","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$848a86622bea988b$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$0704a0db83121540$export$9099ad97b570f7c","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$00b94bfd7801f3c8$exports","$938fa94ea91032bd$exports","tileOrigin","getOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$d3c91b778f21fae8$exports","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","pruneExceptNewestZ","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$2317568ccbc72da2$var$__extends","refresh","setAttributions","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$b8c0af040d9dc0fe$exports","tmpSize","tileOptions","$824311a81ea848b7$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","$2317568ccbc72da2$exports","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$88df26af4a8f1ef6$export$47abe479fba0e55d","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","imageSmoothing","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$62cad3baa594a7e9$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$971276aecb1c0996$export$9099ad97b570f7c","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$860c7bb87df2949a$export$9099ad97b570f7c","$5de5d36893087699$export$8dbdea330bbd6b3c","$2c6eefd9d65aa1d3$export$9099ad97b570f7c","$5f956e0dd2b94819$var$withCredentials","$5f956e0dd2b94819$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5f956e0dd2b94819$export$4355fa6d12274ca5","dataProjection","addFeatures","$e56c3ef950abbf44$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$e56c3ef950abbf44$var$__extends","$e56c3ef950abbf44$export$9099ad97b570f7c","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$2f7370a015f9c7ae$var$axios","$2f7370a015f9c7ae$var$createInstance","defaultConfig","$kOlof","instance","$3Z6Ma","request","$2QA3o","create","instanceConfig","$kXDoc","Axios","Cancel","parcelRequire","CancelToken","isCancel","VERSION","version","promises","spread","isAxiosError","module","exports","$212c67a380367559$var$toString","$212c67a380367559$var$isArray","$212c67a380367559$var$isUndefined","$212c67a380367559$var$isObject","$212c67a380367559$var$isPlainObject","$212c67a380367559$var$isFunction","$212c67a380367559$var$forEach","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isNumber","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","product","merge","$212c67a380367559$var$merge","assignValue","trim","str","stripBOM","content","$f26911cd5b02fa1c$var$validators","$8v4hu","validators","$f26911cd5b02fa1c$var$Axios","defaults","interceptors","$kL2VT","config","method","transitional","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","promise","responseInterceptorChain","chain","$5j6Lx","newConfig","onFulfilled","onRejected","getUri","$kZoBJ","params","paramsSerializer","$f47c97b9ed82a515$var$encode","encodeURIComponent","serializedParams","parts","toISOString","JSON","stringify","hashmarkIndex","$f1ca78cb816f8862$var$InterceptorManager","handlers","use","eject","$3dd3f9a01777c9b3$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$bi5pC","headers","$89XL7","transformRequest","common","adapter","$7xSaK","transformResponse","reason","$8RCQj","fns","$57e5a2f79d444be0$var$DEFAULT_CONTENT_TYPE","$57e5a2f79d444be0$var$setContentTypeIfUnset","$57e5a2f79d444be0$var$defaults","$2m9Bw","$5PZl6","rawValue","parser","encoder","parse","$57e5a2f79d444be0$var$stringifySafely","strictJSONParsing","$2wnpu","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","$1b75160fe44457c8$var$cachedSetTimeout","$1b75160fe44457c8$var$cachedClearTimeout","$1b75160fe44457c8$var$process","$1b75160fe44457c8$var$defaultSetTimout","$1b75160fe44457c8$var$defaultClearTimeout","$1b75160fe44457c8$var$runTimeout","fun","$1b75160fe44457c8$var$currentQueue","$1b75160fe44457c8$var$queue","$1b75160fe44457c8$var$draining","$1b75160fe44457c8$var$queueIndex","$1b75160fe44457c8$var$cleanUpNextTick","$1b75160fe44457c8$var$drainQueue","run","marker","$1b75160fe44457c8$var$runClearTimeout","$1b75160fe44457c8$var$Item","$1b75160fe44457c8$var$noop","nextTick","browser","env","argv","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","normalizedName","toUpperCase","description","number","fileName","lineNumber","columnNumber","onCanceled","requestData","requestHeaders","unsubscribe","auth","username","password","unescape","Authorization","btoa","fullPath","$jPy0I","baseURL","onloadend","responseHeaders","$c3cCp","getAllResponseHeaders","statusText","$3F1uM","onreadystatechange","readyState","responseURL","onabort","$eCXVv","ontimeout","timeoutErrorMessage","xsrfValue","$kAbbi","$92u2k","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","write","expires","path","domain","secure","cookie","toGMTString","decodeURIComponent","requestedURL","$1jtWg","$3qklg","test","relativeURL","$8c5f8d9929198423$var$ignoreDuplicateOf","parsed","line","originURL","msie","urlParsingNode","resolveURL","href","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","$838592e079009531$var$Cancel","__CANCEL__","config1","config2","getMergedValue","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","$63048a22396a4600$var$validators","thing","$63048a22396a4600$var$deprecatedWarnings","validator","formatMessage","opt","desc","$63048a22396a4600$require$VERSION","opts","schema","allowUnknown","$5f70b77111eec3c4$var$CancelToken","executor","resolvePromise","token","_listeners","onfulfilled","_resolve","payload","$618c64b4fc248377$exports","$e12c8bb44acdd73c$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$b30624b926c21759$export$55029509b82b2e2b","$1930bd353b5dd973$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$1930bd353b5dd973$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$bf4e1aa287034bcd$export$9099ad97b570f7c","CircleStyle","$bf4e1aa287034bcd$var$__extends","setRadius","$1930bd353b5dd973$exports","$2977a884eb0897b3$export$9099ad97b570f7c","Fill","color_","setColor","$2051e0d06771d465$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$2bbb9f7aac5f2c94$var$Style","Style","geometryFunction_","$2bbb9f7aac5f2c94$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$2bbb9f7aac5f2c94$var$defaultStyles","$2bbb9f7aac5f2c94$export$33d0043adf82cc14","$bf4e1aa287034bcd$exports","$2bbb9f7aac5f2c94$export$9099ad97b570f7c","$94242b274ad2f2ed$var$Property","$94242b274ad2f2ed$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$94242b274ad2f2ed$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$2bbb9f7aac5f2c94$export$4aaa4bacaec09e94","$df0635a74a7822e1$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$df0635a74a7822e1$export$c649c04369bd3370","$df0635a74a7822e1$export$2513c58bc344fc5c","$df0635a74a7822e1$export$84e3c67fd41b07f5","$df0635a74a7822e1$export$6cd4b1e0c0e7240c","$df0635a74a7822e1$export$9099ad97b570f7c","$4d95c64ce828af6b$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$602faaef6592ac32$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$602faaef6592ac32$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1629b032c2c05b7a$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1629b032c2c05b7a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$602faaef6592ac32$exports","$8503ee84237976ea$export$9099ad97b570f7c","CanvasLineStringBuilder","$8503ee84237976ea$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$0537f4f8a36c0b60$export$9099ad97b570f7c","CanvasPolygonBuilder","$0537f4f8a36c0b60$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$4f3943dd3f2f8692$export$9099ad97b570f7c","$cc27ec6f48b585fa$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$d4f3e170528ef1db$export$3964e67694391753","$d4f3e170528ef1db$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$d4f3e170528ef1db$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$ad370384483cb7cc$var$BATCH_CONSTRUCTORS","$0537f4f8a36c0b60$exports","$1629b032c2c05b7a$exports","$8503ee84237976ea$exports","$d4f3e170528ef1db$exports","$ad370384483cb7cc$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e33d80fd92b6dc93$export$9099ad97b570f7c","$2ec7b6c5a4a595c6$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$2c5e6ed7a2421d9f$export$7326ac1b36a49776","$fbecb62010b6a32d$var$tmpExtent","$fbecb62010b6a32d$var$p1","$fbecb62010b6a32d$var$p2","$fbecb62010b6a32d$var$p3","$fbecb62010b6a32d$var$p4","$fbecb62010b6a32d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$fbecb62010b6a32d$var$rtlRegEx","$fbecb62010b6a32d$var$horizontalTextAlign","align","TEXT_ALIGN","$fbecb62010b6a32d$var$createTextChunks","acc","$fbecb62010b6a32d$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","_a","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","$3f8842a01a05d29f$export$1e20a6b365130d8c","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","cc","part","ii_1","execute","executeHitDetection","$93b70df51285fcd1$var$ORDER","$93b70df51285fcd1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$93b70df51285fcd1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$93b70df51285fcd1$export$f610334c339a4991","featureCallback","imageData","idx","result_1","opt_builderTypes","builderTypes","$93b70df51285fcd1$export$9099ad97b570f7c","$699b1a7f567cffb4$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$699b1a7f567cffb4$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$7be39e8ef53520fe$export$9099ad97b570f7c","$58814494b0ffc538$export$9099ad97b570f7c","$e40ce0ac0e40cff8$var$taintedTestContext","$e40ce0ac0e40cff8$var$IconImage","IconImage","imageState_","tainted_","$e40ce0ac0e40cff8$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e40ce0ac0e40cff8$export$7eb84799c931fe91","$e3932ef79b782730$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$e40ce0ac0e40cff8$exports","offset_","offsetOrigin_","offsetOrigin","$e3932ef79b782730$var$__extends","setAnchor","iconImageSize","$73cf95c6d003b56f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$73cf95c6d003b56f$export$65a5cfeed6fd0c33","feature1","feature2","$73cf95c6d003b56f$export$f0ea347488340e3d","$73cf95c6d003b56f$export$522dfd100dd96ba1","$73cf95c6d003b56f$var$renderGeometry","$73cf95c6d003b56f$var$renderFeatureInternal","getGeometries","$b2ab5ea43be4855f$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$b2ab5ea43be4855f$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ea4701d35a7bcfcb$export$e7468c0ae08395df","clipped","transforms","$699b1a7f567cffb4$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$e3932ef79b782730$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$ce4b2e7cdf1ad653$export$9fd146a6491490e3","resultFeatures","$ce4b2e7cdf1ad653$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$4b239fe5fbbd9442$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","userExtent_1","$73cf95c6d003b56f$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$d16efd1165653604$export$9099ad97b570f7c","VectorLayer","$d16efd1165653604$var$__extends","$b2ab5ea43be4855f$exports","$94242b274ad2f2ed$exports","$0c7c468abb426e87$var$container","$0c7c468abb426e87$var$content","$0c7c468abb426e87$var$closer","$0c7c468abb426e87$var$infoModal","$0c7c468abb426e87$var$infoButton","$0c7c468abb426e87$var$munros","$0c7c468abb426e87$var$bgLayer","$adffffba3f1e99ac$exports","$72436993edd2ca04$exports","onclick","$0c7c468abb426e87$var$map","$a9d71ecad6ede6f8$exports","$0c7c468abb426e87$var$setupPopup","$0c7c468abb426e87$var$popup","$28f1cbaddf44444c$exports","blur","props","munroDetails","region","latlng_lat","latlng_lng","gridref_letters","gridref_eastings","gridref_northings","meaning","$0c7c468abb426e87$var$munroStyle","munro","munroFeature","$6074b396fc14353d$exports","$0c7c468abb426e87$var$buildMunroFeature","munroLayer","$d16efd1165653604$exports","$e56c3ef950abbf44$exports"],"version":3,"file":"index.52957773.js.map"}