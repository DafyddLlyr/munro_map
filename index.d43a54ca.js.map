{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/math.js","node_modules/ol/color.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/css.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/size.js","node_modules/ol/Map.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Overlay.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/ImageState.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/Tile.js","node_modules/ol/Image.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/Source.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/rbush/rbush.min.js","node_modules/ol/source/XYZ.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/Text.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/geom/flat/length.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","main.ts","node_modules/@swc/helpers/src/_object_spread.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if(!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)){\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\n      } else if(utils.isString(contentType = requestHeaders.getContentType())){\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'))\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","\nimport { Feature, Map, View } from 'ol';\nimport Overlay from 'ol/Overlay';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport axios from 'axios';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Coordinate } from 'ol/coordinate';\nimport Geometry from 'ol/geom/Geometry';\nimport RenderFeature from 'ol/render/Feature';\nimport { Fill, RegularShape, Stroke, Style } from 'ol/style';\n\nconst container = document.getElementById('popup') as HTMLElement;\nconst content = document.getElementById('popup-content') as HTMLElement;\nconst closer = document.getElementById('popup-closer') as HTMLElement;\nconst infoModal = document.getElementById('info-modal') as HTMLElement;\nconst infoButton = document.getElementById('info') as HTMLElement;\n\nconst munros: Feature<Point>[] = []\n\nconst bgLayer = new TileLayer({\n  source: new XYZ({\n    url: \"https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=IGPIexDjG8gGAkN35tKd3VoLnFKykGsG\",\n    crossOrigin: '*'\n  }),\n})\n\ninfoButton.onclick = (e) => infoModal.classList.toggle('info-visible');\ninfoModal.onclick = (e) => infoModal.classList.toggle('info-visible');\n\nconst map = new Map({\n  target: 'map',\n  layers: [bgLayer],\n  view: new View({\n    projection: 'EPSG:3857',\n    minZoom: 8,\n    maxZoom: 20,\n    center: fromLonLat([-5.082808, 56.984374]),\n    zoom: 8\n  })\n});\n\nmap.on(\"click\", (e) => {\n  map.forEachFeatureAtPixel(e.pixel, (feature, layer) => {\n    setupPopup(e.coordinate, feature);\n    map.addOverlay(popup);\n  })\n});\n\nconst popup = new Overlay({\n  element: container,\n  autoPan: true,\n  autoPanAnimation: {\n    duration: 250,\n  },\n});\n\ncloser.onclick = () => {\n  popup.setPosition(undefined);\n  closer!.blur();\n  return false;\n};\n\nconst setupPopup = (coord: Coordinate, feature: RenderFeature | Feature<Geometry>) => {\n  popup.setPosition(coord);\n  const props = feature.getProperties()\n  const munroDetails = `\n    <div class=\"munro-details\">\n      <h2 class=\"munro-name\">${props.name}</h2>\n      <hr />\n      <p><b>Height:</b> <span>${props.height}m</span></p>\n      <p><b>Region:</b> <span>${props.region}</span></p>\n      <p><b>Lat Long:</b> <span>${props.latlng_lat}, ${props.latlng_lng}</span></p>\n      <p><b>Grid Ref:</b> <span>${props.gridref_letters} ${props.gridref_eastings} ${props.gridref_northings}</span></p>\n      <p><b>Meaning:</b> <span>${props.meaning}</span></p>\n    </div>\n    `\n  content!.innerHTML = munroDetails;\n}\n\nconst buildMunroFeature = (munro: { [key: string]: any }) => (\n  new Feature({\n    geometry: new Point(fromLonLat([munro.latlng_lng, munro.latlng_lat])),\n    ...munro\n  })\n)\n\nconst munroStyle = new Style({\n  image: new RegularShape({\n    fill: new Fill({\n      color: '#8bc34a'\n    }),\n    stroke: new Stroke({\n      color: 'black'\n    }),\n    points: 3,\n    radius: 10,\n  }),\n})\n\naxios.get(\"https://munroapi.herokuapp.com/munros\").then(\n  response => {\n    response.data.forEach((munro: { [key: string]: any }) => {\n      const munroFeature = buildMunroFeature(munro)\n      munros.push(munroFeature)\n    })\n\n    const munroLayer = new VectorLayer({\n      source: new VectorSource({\n        features: munros,\n      }),\n      style: munroStyle,\n    })\n\n    map.addLayer(munroLayer)\n  }\n);","import defineProperty from './_define_property';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}"],"names":["obj","key","value","Object","defineProperty","enumerable","configurable","writable","$69c59045833c3003$export$9099ad97b570f7c","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$78afe97655c173a4$export$9099ad97b570f7c","$664ea55fc19a08b3$export$9099ad97b570f7c","disposed","dispose","disposeInternal","$31189420a57baeba$export$235915d17ff56858","a","b","$31189420a57baeba$export$45934da9231b7323","arr","direction","n","length","i","candidate","$31189420a57baeba$export$1f4f991ce94838ce","begin","end","tmp","$31189420a57baeba$export$46e35401bc090c62","data","extension","Array","isArray","$31189420a57baeba$export$bcc761834e33d339","arr1","arr2","len1","$351d82b0a78a5705$export$ad8dd69aa6772cd0","$351d82b0a78a5705$export$5c50afa32081505e","$351d82b0a78a5705$export$3850addf0fb4e6a7","$43f7a9f222abbea0$export$97fff7491bd246bd","object","property","$43f7a9f222abbea0$export$988399e568471db1","$ad3de02656425e16$export$9099ad97b570f7c","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","keys","index","indexOf","splice","$1f1034d6043b657b$export$9099ad97b570f7c","$56a06269a268820b$export$ff95bcce2965a200","thisArg","once","bind","originalListener","apply","arguments","eventsKey","$56a06269a268820b$export$d2df825b2d8bc2ba","$56a06269a268820b$export$6dee5fd4fdf600ff","$63adf90947e79212$var$Observable","on","onInternal","onceInternal","un","unInternal","revision_","changed","getRevision","len","ol_key","$63adf90947e79212$export$21f63b82add5980c","prototype","$63adf90947e79212$export$9099ad97b570f7c","$e14829ca1f519173$export$18e1b4ff5b3c2297","Error","$e14829ca1f519173$var$uidCounter_","$e14829ca1f519173$export$604e9536b9e0488a","ol_uid","String","$9403ba232d3d3401$export$b902cfd711fa7f06","key1","oldValue1","oldValue","$9403ba232d3d3401$export$9099ad97b570f7c","values1","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","oldValue2","values","key2","applyProperties","source","unset","$9531785aa63836ff$export$b8795f4f643ce74f","assertion","errorMessage","$400ea8eade5f039d$var$Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","$400ea8eade5f039d$export$7cf753b6a6534915","setId","id","name","$400ea8eade5f039d$export$9099ad97b570f7c","$404829bff740bb1b$export$9099ad97b570f7c","$6f518feb4a5d11c4$var$Property","$6f518feb4a5d11c4$export$cf29312ab18b402e","element","index1","$6f518feb4a5d11c4$export$9099ad97b570f7c","array","options","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","pop","extend","i1","ii1","forEach","f","array1","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","$527d7f7180afe02d$var$ua","navigator","userAgent","toLowerCase","$527d7f7180afe02d$export$543c908bf17a24fb","$527d7f7180afe02d$export$bccc8605349feea7","test","$527d7f7180afe02d$export$f16ffc71033a7aaa","$527d7f7180afe02d$export$1940d5d2b4cf824d","devicePixelRatio","$527d7f7180afe02d$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$527d7f7180afe02d$export$9544418e5c6fedfe","Image","decode","$527d7f7180afe02d$export$700ce540937d8c69","passive","window","error","$d26dae22fe1d838f$export$77f8d2fc923b14e3","transform","c","d","e","$d26dae22fe1d838f$export$6af9bbf310c9e4bf","coordinate","x","y","$d26dae22fe1d838f$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$d26dae22fe1d838f$export$6e6aac0f60e83c70","det","mat","$d26dae22fe1d838f$var$transformStringDiv","$d26dae22fe1d838f$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$9b4dc89090328257$export$9099ad97b570f7c","$6979b253edf31824$export$a7ecbd362d65c1fe","coordinates","extent","$6979b253edf31824$export$dbb3d72606cdc11","$6979b253edf31824$export$2852acc8f8b94686","$6979b253edf31824$export$14e1765886db335a","dest","$6979b253edf31824$export$d6a0542127b96c83","slice","$6979b253edf31824$export$c7d6a927f416dd39","dx","dy","$6979b253edf31824$export$c422a9fcb5f1ee5c","$6979b253edf31824$export$cc70e7e516e4370f","$6979b253edf31824$export$4f55e2d709659e7b","extent1","extent2","$6979b253edf31824$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$6979b253edf31824$export$ea8082d0226d35a5","$6979b253edf31824$export$80741250c74fd4fa","$6979b253edf31824$export$bcc761834e33d339","$6979b253edf31824$export$4b116deb3079b147","flatCoordinates","offset","stride","$6979b253edf31824$export$8696fee511ea7c7a","min","max","$6979b253edf31824$export$c26f7b9c5adc34b4","callback","val","$6979b253edf31824$export$3932426cd8118930","$6979b253edf31824$export$4e2fc25ce97f3583","$6979b253edf31824$export$35aedeaeee8be6cd","$6979b253edf31824$export$5100f0815ea32995","$6979b253edf31824$export$ab4e37d31d15614d","area","$6979b253edf31824$export$988399e568471db1","$6979b253edf31824$export$3dc3550566517965","$6979b253edf31824$export$e178c8044d3d0a05","$6979b253edf31824$export$339e303bf205caae","$6979b253edf31824$export$38622892ed79bdc7","corner","$6979b253edf31824$export$3212225221d5bc14","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","$6979b253edf31824$export$eaa5fa57bd4e25f6","cosRotation","sinRotation","xCos","xSin","yCos","ySin","$6979b253edf31824$export$c491031eb9adcc3a","intersection","$6979b253edf31824$export$c3bd2c3b798b0350","$6979b253edf31824$export$76e02248c0889c3e","transformFn","stops","width","height","xs","ys","l","$6979b253edf31824$var$_boundingExtentXYs","$6979b253edf31824$export$5a0d9577a24f3c5b","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$41189646474e5084$export$4b8705656de00c72","$41189646474e5084$export$fd0b1e5ac4df516c","t","$41189646474e5084$export$8b6706701cd75ea9","$41189646474e5084$export$4fc80c88d72f096","angleInDegrees","PI","$41189646474e5084$export$3334706ffb3dccb1","r","$41189646474e5084$export$45ca8e7f50ccf2e0","$41189646474e5084$export$3497369f53ce744c","decimals","factor","pow","round","$41189646474e5084$export$88807bfbd2f98762","$41189646474e5084$export$bc09dedfee4dad59","ceil","$05f8d3eb3a3b3632$var$HEX_COLOR_RE_","$05f8d3eb3a3b3632$var$NAMED_COLOR_RE_","$05f8d3eb3a3b3632$export$9fe004474d6f7f65","color","$05f8d3eb3a3b3632$export$47bee913e0e80eb4","$05f8d3eb3a3b3632$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","$05f8d3eb3a3b3632$export$21528ce64591bf2","cache","cacheSize","s","g","exec","hasAlpha","parseInt","substr","startsWith","split","map","Number","$05f8d3eb3a3b3632$export$2e33abec8aecd572","$05f8d3eb3a3b3632$var$fromStringInternal_","$05f8d3eb3a3b3632$export$7266a24c0caa2a8","$0828fcafb706d3fc$var$IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","$0828fcafb706d3fc$var$getKey","setSize","maxCacheSize","$0828fcafb706d3fc$export$601b9e2be44c7cb2","$af9ac451f9e710c1$export$9099ad97b570f7c","$5bc06fc72e60a1e5$export$9099ad97b570f7c","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$89b1d20a080b27f0$export$9099ad97b570f7c","$69221d06b0113aff$export$9099ad97b570f7c","$8d321ccd3e128174$export$9099ad97b570f7c","CENTER","RESOLUTION","ROTATION","$86e550413146b27c$export$6c563273fc39e165","$c9c507281fcc3891$export$af68584dedf5e52c","$c524398f6723d704$export$9099ad97b570f7c","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7f3701aa8bdb506a$export$8c5f77743cd0e8b7","$7f3701aa8bdb506a$export$bb1f4f75177e5528","$7f3701aa8bdb506a$export$6fd015d56b8406c9","$7f3701aa8bdb506a$export$64afaa717a0c4932","$7f3701aa8bdb506a$export$2126dea64bc40b7b","log","tan","$7f3701aa8bdb506a$var$EPSG3857Projection","point","cosh","$7f3701aa8bdb506a$export$850c9b527a5298aa","$7f3701aa8bdb506a$export$128bedc7a8a0ae2c","input","output","dimension","$7f3701aa8bdb506a$export$f361696640082386","atan","exp","$9fa231a87381e908$export$6fd015d56b8406c9","$9fa231a87381e908$export$af68584dedf5e52c","$9fa231a87381e908$var$EPSG4326Projection","$9fa231a87381e908$export$850c9b527a5298aa","$b355c55a4bde1b89$var$cache","$57e7e4423e192b2f$var$transforms","$57e7e4423e192b2f$export$568ed88074851180","destination","sourceCode","destinationCode","$3b0bd531a043cbd1$export$bcc761834e33d339","coordinate1","coordinate2","equals","$3b0bd531a043cbd1$export$d40e2456b1281660","cosAngle","sinAngle","$3b0bd531a043cbd1$export$5a0d9577a24f3c5b","worldsAway","$3b0bd531a043cbd1$export$c8ebaff90a21375a","sourceExtentWidth","$1a993eb37fc0a4e5$export$761de677acb0d085","$1a993eb37fc0a4e5$export$aec7b6756585c081","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fd75aeaccc88805d$var$levels","info","warn","none","$fd75aeaccc88805d$var$level","$fd75aeaccc88805d$export$5db1af49deb5cdf6","args","console","$e9b048d51236bbbc$var$showCoordinateWarning","$e9b048d51236bbbc$export$95cd20be0944d6c1","disable","$e9b048d51236bbbc$export$3fbbaef54e2e9d28","$e9b048d51236bbbc$export$678028d364072132","$e9b048d51236bbbc$export$6308908a0016f099","$b355c55a4bde1b89$export$568ed88074851180","$e9b048d51236bbbc$export$7eb84799c931fe91","projectionLike","replace","$e9b048d51236bbbc$export$75cdc5d556e3d9b2","pointResolution","getter","projUnits","toEPSG4326","$e9b048d51236bbbc$export$747af4f49bde2f53","vertices","$e9b048d51236bbbc$export$a42db349809b0c24","projections","$e9b048d51236bbbc$export$fd4cd3535c7ea97f","$e9b048d51236bbbc$export$f704437a72056fb8","defaultCode","$e9b048d51236bbbc$export$13550698a4b6771e","$e9b048d51236bbbc$export$4b169b49e1a4823b","$e9b048d51236bbbc$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$57e7e4423e192b2f$export$7eb84799c931fe91","$e9b048d51236bbbc$export$9336879ef6599bf5","$e9b048d51236bbbc$export$f2a2f51d8aa8d6b0","$e9b048d51236bbbc$var$userProjection","$e9b048d51236bbbc$export$352fd07bdd93dc1e","$e9b048d51236bbbc$export$4a182a4d53d7595c","$e9b048d51236bbbc$export$b5d00774755783fc","destProjection","$e9b048d51236bbbc$export$a7d473ff80a6a3b","$e9b048d51236bbbc$export$f87215506b474b9e","$e9b048d51236bbbc$export$30407c756b1c3707","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","$5b15465d65b208f9$export$33d0cf822839cfa8","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$5b15465d65b208f9$export$eaafe0fae18e32b1","$c5d62abeb18093bc$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$c5d62abeb18093bc$var$getSmoothClampedResolution","result","$c5d62abeb18093bc$export$56cba9b4a749f219","cappedMaxRes","$dd50dbab14b9e355$export$e97ec87d2336bd4e","$dd50dbab14b9e355$export$eaafe0fae18e32b1","$d316f2294d12f14b$export$9fbc3b1d6b2da9ec","$d316f2294d12f14b$export$673b9849e2bc032c","$d316f2294d12f14b$export$1b5c1277e30d397d","$d316f2294d12f14b$export$5523e35ab8ae283a","$fb5c77af8a17a25c$export$92106241c01aa541","j","$fb5c77af8a17a25c$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$b682244a7d047928$var$tmpTransform","$b682244a7d047928$export$9099ad97b570f7c","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","$351d82b0a78a5705$export$1bd42086bda9cade","revision","squaredTolerance","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6979b253edf31824$export$d1e01ccfd06bf8ee","rotate","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$5caa66f67d70c90b$export$2a65008b73824080","layout","$5caa66f67d70c90b$export$9099ad97b570f7c","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","$5caa66f67d70c90b$var$getLayoutForStride","$fb5c77af8a17a25c$export$8f869025bba9609b","$fb5c77af8a17a25c$export$41b0d7466cde8385","$c8d16959777aa5d2$var$assignClosest","offset1","offset2","$c8d16959777aa5d2$export$acf7548d1f0e8581","squaredDelta","$c8d16959777aa5d2$export$ba38095f6bb45df2","ends","$c8d16959777aa5d2$export$cc4caddc4c9b8b6f","maxDelta","isRing","tmpPoint","squaredDistance","$c8d16959777aa5d2$export$3dd3914e22f9012e","$fa72d035ed15d370$export$e175f505890ac90f","$fa72d035ed15d370$export$ab1a51db55485752","coordinatess","jj","$f117f014c02c321b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","$f117f014c02c321b$export$383ea8a1f2974dfb","$f117f014c02c321b$export$e29de4fdb2175738","$f117f014c02c321b$export$1df19a1eb5514c2f","simplifiedEnds","$8156c430059b0be1$export$92f32d891164b0ac","$8156c430059b0be1$export$d82a8a3167f968d","$8156c430059b0be1$export$db289937da1f5213","endss","coordinatesss","$1720796d74226cac$export$9bf2059fd656d5e9","twiceArea","$1720796d74226cac$export$99cb92d00fd73c87","$14f82d27708e2673$var$LinearRing","coordinates1","layout1","maxDelta_","maxDeltaRevision_","getArea","$14f82d27708e2673$export$9099ad97b570f7c","$b7b44b2e7369d419$var$Point","$6979b253edf31824$export$b6ab620e694fb080","$fa72d035ed15d370$export$a53e62528b652807","$b7b44b2e7369d419$export$9099ad97b570f7c","$d0ff7551bd225db7$export$f7b55b637f92fd7","$d0ff7551bd225db7$export$e2ed757909b25f63","wn","$d0ff7551bd225db7$export$51e46a3625992b91","$fba4e8b2345a6181$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$3f240441e8158030$export$26f047a5bfac4b1a","coordinatesExtent","ret","$453f0f3786b8ff29$export$40f3d9558cf6e846","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6979b253edf31824$export$525a75abb91115e3","$3f240441e8158030$export$f14bd9270666b480","$3f240441e8158030$export$717c2c7c46a5bf3d","$081640ea8b715cda$export$c77fe031a1447f2e","$e73c8a2e0bc9e480$export$add61ad31d0a68b4","edge","$e73c8a2e0bc9e480$export$586adaf930d9fdb6","right","isClockwise","$e73c8a2e0bc9e480$export$325e57738fd8b321","$70159e2f3144e634$var$Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","ends1","linearRings","$70159e2f3144e634$export$9099ad97b570f7c","$70159e2f3144e634$export$b50d271c6e9656cd","$4d9e33768334286e$var$animationCallback","returnValue","setTimeout","$4d9e33768334286e$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d9e33768334286e$var$calculateCenterOn","position","rotX","rotY","$4d9e33768334286e$export$9099ad97b570f7c","options1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","options2","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","$c5d62abeb18093bc$export$d1041fa75d07f305","defaultMaxResolution","degrees","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","$c5d62abeb18093bc$export$7690ad4e930f454b","constraint","$4d9e33768334286e$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$4d9e33768334286e$export$535fae5a159fbda4","rotationConstraint","enableRotation","constrainRotation","theta","$dd50dbab14b9e355$export$37e537ca821cbb20","$4d9e33768334286e$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","$c42f11a8ed244eef$export$16970faadcd3f29b","layerState","$c42f11a8ed244eef$export$9099ad97b570f7c","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","source1","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerState1","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","$acb05479f915e9be$var$expireIconCache","map1","$acb05479f915e9be$export$9099ad97b570f7c","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","m","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","$911ab4cf0143b734$export$9099ad97b570f7c","inversePixelTransform","context","$8dfbec8593aa270d$export$4b206f1dd0085e9f","$8dfbec8593aa270d$export$6cfb92f3ca39d412","$8dfbec8593aa270d$export$a6463a3b3793c500","$8dfbec8593aa270d$var$fontRegEx","RegExp","$8dfbec8593aa270d$var$fontRegExMatchIndex","$8dfbec8593aa270d$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$1999371b8a7a6e92$export$fe55455cced7aebb","canvasPool","settings","canvas","shift","getContext","$1999371b8a7a6e92$export$66cdde09c617964d","clearRect","$1999371b8a7a6e92$export$954ce77093b0d494","offsetWidth","marginLeft","marginRight","$1999371b8a7a6e92$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$1999371b8a7a6e92$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$1999371b8a7a6e92$export$47503d53c08beb29","$1999371b8a7a6e92$export$f0994cfd84ab1152","lastChild","$0511c8c10849dc1a$export$18c07a12203603b5","$0511c8c10849dc1a$export$55c06ab37ead2f5d","$0511c8c10849dc1a$export$ffc0c15ee0fd31b3","$0511c8c10849dc1a$export$6ad0413f8fea3c71","$0511c8c10849dc1a$export$4f3c27e569bdb39e","$0511c8c10849dc1a$export$b679e5c5d4b15cf5","$0511c8c10849dc1a$export$d721e051424a5865","$0511c8c10849dc1a$export$6f57224ec3df03c9","$0511c8c10849dc1a$export$70c5a077e5d6beb9","$0511c8c10849dc1a$export$907cf5cff4a8acb1","$0511c8c10849dc1a$var$measureFont","$0511c8c10849dc1a$var$measureContext","$0511c8c10849dc1a$export$384c0f09c94ed6cc","$0511c8c10849dc1a$export$6491effd8671e9f6","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$0511c8c10849dc1a$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$0511c8c10849dc1a$export$a2bf16790cd8f004","measureElement","metrics","$0511c8c10849dc1a$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureText","$0511c8c10849dc1a$export$4b2ca35321179b27","reduce","curr","$0511c8c10849dc1a$export$3004e0c7927eb2d1","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","$0511c8c10849dc1a$var$executeLabelInstructions","drawImage","restore","$a7bc897a99e1468c$export$9099ad97b570f7c","fontChangeListenerKey_","redrawText","element_","$8dfbec8593aa270d$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","layerIndex","sourceState","children","oldChildren","childNodes","oldChild","newChild","$1999371b8a7a6e92$export$439ebc2b0f0ec9f4","layers","renderDeclutter","$9b534bf563223e28$export$88ab4fe370923b6f","layer1","$9b534bf563223e28$var$Property","$9b534bf563223e28$var$LayerGroup","layers1","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","layer2","collection","currentLayers","pos","ownLayerState","defaultZIndex","$9b534bf563223e28$export$9099ad97b570f7c","$fb4925193e6007b2$export$9099ad97b570f7c","$87748d91c1ff80d0$export$9099ad97b570f7c","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","$d1dde526982cc5ac$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a59fb3ca034fecde$export$9099ad97b570f7c","$08be60d5c9a54b41$export$9099ad97b570f7c","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$97a07643bed490b2$export$9099ad97b570f7c","$de0c0f8112f90228$export$9099ad97b570f7c","$c6360ad74bd7a546$export$55b8074a560bbdf4","$c6360ad74bd7a546$export$9099ad97b570f7c","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","priorityFunction1","$64b89b0b3d0b4cba$export$9099ad97b570f7c","$40a9fb900c9e0ad4$export$9099ad97b570f7c","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$88abedb827e5ec1b$export$9099ad97b570f7c","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$72fd36fb1a212cd3$export$9099ad97b570f7c","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","element1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$f0a10ea98a6cb519$export$9099ad97b570f7c","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$d3f921aa5a285174$export$9099ad97b570f7c","delta1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$0d5605eedb6da3c8$export$9099ad97b570f7c","$33139a7ba78491c7$export$d2c07614bfd6a817","$33139a7ba78491c7$export$9099ad97b570f7c","setActive","getActive","mapBrowserEvent","active","$787de85327c916bb$export$9099ad97b570f7c","delta_","stopEvent","browserEvent","shiftKey","$82cbbbeb425d67d7$export$e61edea4dfe4ed9b","$82cbbbeb425d67d7$export$9099ad97b570f7c","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$83e85025105111b6$export$8dbdea330bbd6b3c","conditions","pass","$83e85025105111b6$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$83e85025105111b6$export$584a07df7b145c47","getTargetElement","hasAttribute","targetElement","activeElement","$83e85025105111b6$export$363947888fb85da6","$83e85025105111b6$export$a8612972eacfc116","$83e85025105111b6$export$9f5e19851eeaf2c1","$83e85025105111b6$export$1734dfcac3c09b2f","$83e85025105111b6$export$59c8376875f673f8","$83e85025105111b6$export$5bbcce8021828272","tagName","isContentEditable","$83e85025105111b6$export$d31d3f3aa38542a8","pointerType","$83e85025105111b6$export$45cd27c0322d6513","isPrimary","$a42fdc6c339cab83$export$9099ad97b570f7c","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getDistance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$9057ffe9f6806c34$export$9099ad97b570f7c","lastAngle_","getSize","$6a5b5969cfd0314b$export$9099ad97b570f7c","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","$66cbaf7779269f15$var$DragBoxEventType","$66cbaf7779269f15$export$4d9b552836937ca2","mapBrowserEvent1","$66cbaf7779269f15$export$9099ad97b570f7c","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$0da21c36fc8689b0$export$9099ad97b570f7c","out_","out","$42ce773ffc313d0b$export$9099ad97b570f7c","$f6b95667a4c90ca6$export$9099ad97b570f7c","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$33139a7ba78491c7$export$63568b31cb17dd4d","$9eebcf690d0cc684$export$9099ad97b570f7c","$83e85025105111b6$export$2f688d8a41d1df21","$f3f3e2bdc0486d9f$export$9099ad97b570f7c","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","delay1","lastIndex","firstIndex","$e4045b56fe7b53f8$export$9099ad97b570f7c","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$7569a186ce0b430a$export$9099ad97b570f7c","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$916765f6a8929418$export$9099ad97b570f7c","lastDistance_","lastScaleDelta_","scaleDelta","$25e118ccc56a5e21$export$c563c2b7121f8771","$25e118ccc56a5e21$export$48d31d2725e4d98b","$fb244fe1c9d9d25f$var$removeLayerMapProperty","$fb244fe1c9d9d25f$var$setLayerMapProperty","$fb244fe1c9d9d25f$export$9099ad97b570f7c","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","$fb244fe1c9d9d25f$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attribution","attributionOptions","$057a91711f0e964f$export$b403fbac94228e09","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$d5f995f163692d84$export$b403fbac94228e09","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","$40a9fb900c9e0ad4$export$f7de9366327711a7","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$1d07770e306558e0$var$Property","$1d07770e306558e0$export$9099ad97b570f7c","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$6138c5b4bdbde302$export$9099ad97b570f7c","$2670773e9616adac$export$9099ad97b570f7c","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$935f8b7a5b85bfe8$export$9099ad97b570f7c","$d210c08aef54bfde$export$9099ad97b570f7c","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","renderIfReadyAndVisible","loadImage","imageState","$a8df043d7f945436$export$859d51369429a63b","$a8df043d7f945436$var$pixelContext","$a8df043d7f945436$export$9099ad97b570f7c","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$c0f00e1ca40f5de0$export$9099ad97b570f7c","state1","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$2fea8d7b0a052aea$export$d65c8ce7e335cde2","reject","handleLoad","unlisten","handleError","$2fea8d7b0a052aea$export$d236c5042cfc1ed2","$9f0932f8a34c2627$export$9099ad97b570f7c","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","$9f0932f8a34c2627$var$getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","loadHandler","errorHandler","img","listening","decoding","loaded","catch","$2fea8d7b0a052aea$export$469eb8ba3f45955e","$c2aa963399ff5087$export$9099ad97b570f7c","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision1","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$c79baf82c906261e$var$brokenDiagonalRendering_","$c79baf82c906261e$export$859d51369429a63b","$c79baf82c906261e$var$drawTestTriangle","u1","v1","u2","v2","closePath","$c79baf82c906261e$var$verifyBrokenDiagonalRendering","$c79baf82c906261e$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$c79baf82c906261e$export$792a797b69be0d58","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$41189646474e5084$export$27dc5719ceda6735","$c79baf82c906261e$var$isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","$8cf1db551f7c8651$export$9099ad97b570f7c","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$c79baf82c906261e$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","targetResolution1","sourceResolution1","targetExtent1","leftToLoad","sourceListenKey","unlistenSources_","$3d04e27be03144b8$var$TileRange","containsTileRange","getHeight","getWidth","$3d04e27be03144b8$export$ea8082d0226d35a5","minX1","maxX1","minY1","maxY1","$3d04e27be03144b8$export$9099ad97b570f7c","$911c86a56b705ee0$export$9099ad97b570f7c","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileLayer1","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$326310a679f3ff3e$export$9099ad97b570f7c","$cf2f6e20b6b138a4$export$9099ad97b570f7c","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","$c15fc44d1077d497$export$ea8082d0226d35a5","$c15fc44d1077d497$export$1039fb0288fd71e3","$c15fc44d1077d497$export$a0f0ccbe5bbc0789","$e0d8d793f2458be2$export$9099ad97b570f7c","pruneExceptNewestZ","$c15fc44d1077d497$export$5208a752d34424e5","$9c50562c86c5e818$export$9099ad97b570f7c","$bae52fc8280398fa$var$adaptAttributions","attributionLike","$bae52fc8280398fa$export$9099ad97b570f7c","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","$1d0405a55c5b390d$var$tmpTileCoord","$1d0405a55c5b390d$export$9099ad97b570f7c","strict","compare","every","currentVal","res","$31189420a57baeba$export$fd1d1d368f0c3e6f","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$d4d4204e000d87e1$export$115502f69f929231","$d4d4204e000d87e1$var$resolutionsFromExtent","$d4d4204e000d87e1$export$57c49ef1657592d4","$d4d4204e000d87e1$export$9666e825b22d806d","$d4d4204e000d87e1$export$6dfef52f91d4f582","half","$5cca03204735719f$export$8434c8db61edbf9d","$5cca03204735719f$export$9099ad97b570f7c","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","tileSize1","getTileCoordForTileUrlFunction","$d4d4204e000d87e1$export$5a0d9577a24f3c5b","$c15fc44d1077d497$export$b46b80619528d4e5","$598ebbe522bf4b2d$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$598ebbe522bf4b2d$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c15fc44d1077d497$export$4639c7f2947f4458","$598ebbe522bf4b2d$export$c6a04e0c49b28953","$3e9b4960f3db4741$var$UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","$598ebbe522bf4b2d$export$47abe479fba0e55d","$3e9b4960f3db4741$export$9099ad97b570f7c","$599f0e87b598536d$var$defaultTileLoadFunction","imageTile","$599f0e87b598536d$export$9099ad97b570f7c","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ff7bc28f591d2243$export$9099ad97b570f7c","xyzOptions","gridOptions","$d4d4204e000d87e1$export$5731532c605ee56","$a3d1b86eb82917d6$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$f7d5b8d41e7ac34b$export$9099ad97b570f7c","maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$5c1403f2939ff4fe$export$9099ad97b570f7c","$87d0cb4974320275$export$8dbdea330bbd6b3c","$4813b003eded0fb8$var$withCredentials","$4813b003eded0fb8$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$4813b003eded0fb8$export$4355fa6d12274ca5","dataProjection","addFeatures","$b8c6edd12511f3b2$export$e3e368afaf9a4fc7","feature1","features2","$b8c6edd12511f3b2$export$9099ad97b570f7c","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection1","features1","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","feature2","length1","length2","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","features3","getFeaturesAtCoordinate","getFeaturesInExtent","$6979b253edf31824$export$7453f195793a5271","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$c2a616ae58cc18b7$var$toString","$c2a616ae58cc18b7$var$getPrototypeOf","$c2a616ae58cc18b7$var$kindOf","create","thing","str","$c2a616ae58cc18b7$var$kindOfTest","$c2a616ae58cc18b7$var$typeOfTest","$c2a616ae58cc18b7$var$isArray","$c2a616ae58cc18b7$var$isUndefined","$c2a616ae58cc18b7$var$isArrayBuffer","$c2a616ae58cc18b7$var$isString","$c2a616ae58cc18b7$var$isFunction","$c2a616ae58cc18b7$var$isNumber","$c2a616ae58cc18b7$var$isObject","$c2a616ae58cc18b7$var$isPlainObject","Symbol","toStringTag","iterator","$c2a616ae58cc18b7$var$isDate","$c2a616ae58cc18b7$var$isFile","$c2a616ae58cc18b7$var$isBlob","$c2a616ae58cc18b7$var$isFileList","$c2a616ae58cc18b7$var$isURLSearchParams","$c2a616ae58cc18b7$var$forEach","allOwnKeys","getOwnPropertyNames","$c2a616ae58cc18b7$var$findKey","_key","$c2a616ae58cc18b7$var$_global","globalThis","$parcel$global","$c2a616ae58cc18b7$var$isContextDefined","$c2a616ae58cc18b7$var$isTypedArray","TypedArray","Uint8Array","$c2a616ae58cc18b7$var$isHTMLForm","$c2a616ae58cc18b7$var$hasOwnProperty","prop","$c2a616ae58cc18b7$var$isRegExp","$c2a616ae58cc18b7$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","$c2a616ae58cc18b7$var$ALPHA","$c2a616ae58cc18b7$var$DIGIT","$c2a616ae58cc18b7$var$ALPHABET","ALPHA_DIGIT","toUpperCase","$c2a616ae58cc18b7$var$isAsyncFn","$c2a616ae58cc18b7$export$9099ad97b570f7c","isBuffer","kind","FormData","append","ArrayBuffer","isView","buffer","pipe","$c2a616ae58cc18b7$var$merge","caseless","assignValue","targetKey","$07c76adeb4954c8e$export$9099ad97b570f7c","trim","content","superConstructor","props","sourceObj","destObj","propFilter","merged","searchString","next","pair","regExp","hasOwnProp","arrayOrString","delimiter","p2","defaultValue","alphabet","random","visit","reducedValue","$b8df9fca895878e2$var$AxiosError","message","config","request","captureStackTrace","inherits","description","number","fileName","lineNumber","columnNumber","toJSONObject","$b8df9fca895878e2$var$prototype","$b8df9fca895878e2$var$descriptors","customProps","axiosError","toFlatObject","cause","$0fb8cce68f4a0da5$export$74954538e33d2f49","$0fcb4d4d678a8071$export$297b58465abed6df","$0fcb4d4d678a8071$export$2367b5e7922a95be","$b8df9fca895878e2$export$9099ad97b570f7c","b64","lens","$0fcb4d4d678a8071$var$getLens","validLen","placeHoldersLen","$0fcb4d4d678a8071$var$Arr","$0fcb4d4d678a8071$var$_byteLength","curByte","$0fcb4d4d678a8071$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$0fcb4d4d678a8071$var$encodeChunk","$0fcb4d4d678a8071$var$lookup","$6437d2b8770a24e0$export$a9187e77005a4477","$6437d2b8770a24e0$export$2c262a1484748b93","$0fcb4d4d678a8071$var$code","$0fcb4d4d678a8071$var$i","$0fcb4d4d678a8071$var$len","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","$0fb8cce68f4a0da5$var$customInspectSymbol","$0fb8cce68f4a0da5$var$Buffer","$0fb8cce68f4a0da5$var$K_MAX_LENGTH","$0fb8cce68f4a0da5$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","$0fb8cce68f4a0da5$var$allocUnsafe","$0fb8cce68f4a0da5$var$from","string","encoding","isEncoding","$0fb8cce68f4a0da5$var$byteLength","actual","write","$0fb8cce68f4a0da5$var$fromString","arrayView","$0fb8cce68f4a0da5$var$isInstance","copy","$0fb8cce68f4a0da5$var$fromArrayBuffer","byteOffset","byteLength","$0fb8cce68f4a0da5$var$fromArrayLike","$0fb8cce68f4a0da5$var$fromArrayView","SharedArrayBuffer","valueOf","$0fb8cce68f4a0da5$var$checked","$0fb8cce68f4a0da5$var$numberIsNaN","$0fb8cce68f4a0da5$var$fromObject","toPrimitive","$0fb8cce68f4a0da5$var$assertSize","mustMatch","loweredCase","$0fb8cce68f4a0da5$var$utf8ToBytes","$0fb8cce68f4a0da5$var$base64ToBytes","$0fb8cce68f4a0da5$var$slowToString","$0fb8cce68f4a0da5$var$hexSlice","$0fb8cce68f4a0da5$var$utf8Slice","$0fb8cce68f4a0da5$var$asciiSlice","$0fb8cce68f4a0da5$var$latin1Slice","$0fb8cce68f4a0da5$var$base64Slice","$0fb8cce68f4a0da5$var$utf16leSlice","$0fb8cce68f4a0da5$var$swap","$0fb8cce68f4a0da5$var$bidirectionalIndexOf","dir","$0fb8cce68f4a0da5$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$0fb8cce68f4a0da5$var$hexWrite","remaining","strLen","parsed","$0fb8cce68f4a0da5$var$utf8Write","$0fb8cce68f4a0da5$var$blitBuffer","$0fb8cce68f4a0da5$var$asciiWrite","byteArray","$0fb8cce68f4a0da5$var$asciiToBytes","$0fb8cce68f4a0da5$var$base64Write","$0fb8cce68f4a0da5$var$ucs2Write","hi","lo","$0fb8cce68f4a0da5$var$utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$0fb8cce68f4a0da5$var$MAX_ARGUMENTS_LENGTH","$0fb8cce68f4a0da5$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$0fb8cce68f4a0da5$var$typedArraySupport","poolSize","alloc","fill","$0fb8cce68f4a0da5$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","$0fb8cce68f4a0da5$var$hexSliceLookupTable","bytes","$0fb8cce68f4a0da5$var$checkOffset","ext","$0fb8cce68f4a0da5$var$checkInt","$0fb8cce68f4a0da5$var$checkIEEE754","$0fb8cce68f4a0da5$var$writeFloat","littleEndian","noAssert","$0fb8cce68f4a0da5$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$0fb8cce68f4a0da5$var$INVALID_BASE64_RE","leadSurrogate","$0fb8cce68f4a0da5$var$base64clean","dst","table","i16","$121058c07950d0b8$var$isVisitable","isPlainObject","$121058c07950d0b8$var$removeBrackets","endsWith","$121058c07950d0b8$var$renderKey","path","dots","token","$121058c07950d0b8$var$predicates","$121058c07950d0b8$export$9099ad97b570f7c","formData","isObject","metaTokens","indexes","option","isUndefined","visitor","defaultVisitor","useBlob","Blob","isSpecCompliantForm","isFunction","convertValue","isDate","toISOString","isBlob","isArrayBuffer","isTypedArray","JSON","stringify","$121058c07950d0b8$var$isFlatArray","isFileList","toArray","exposedHelpers","build","$88ceee77ff23f821$var$encode","charMap","encodeURIComponent","$88ceee77ff23f821$var$AxiosURLSearchParams","params","_pairs","$88ceee77ff23f821$var$prototype","encoder","_encode","$88ceee77ff23f821$export$9099ad97b570f7c","$ebdc11c431a82b11$var$encode","encode","serializeFn","serialize","serializedParams","isURLSearchParams","hashmarkIndex","$d1de457d4fed7037$export$9099ad97b570f7c","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","$414485b93288364a$export$9099ad97b570f7c","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$87e21b7710395b4a$export$9099ad97b570f7c","isBrowser","classes","URLSearchParams","product","importScripts","protocols","$f566a7e2ebbf0f9a$export$9099ad97b570f7c","buildPath","isNumericKey","isLast","$f566a7e2ebbf0f9a$var$arrayToObject","isFormData","entries","forEachEntry","matchAll","$f566a7e2ebbf0f9a$var$parsePropPath","$716c5b01e8127bd0$var$defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","isHTMLForm","isStream","isFile","isArrayBufferView","setContentType","helpers","isNode","$029f8f85b419650b$export$9099ad97b570f7c","formSerializer","_FormData","env","rawValue","parser","parse","$716c5b01e8127bd0$var$stringifySafely","transformResponse","JSONRequested","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","$716c5b01e8127bd0$export$9099ad97b570f7c","$df2d499cd52e76e4$var$ignoreDuplicateOf","toObjectSet","$ab910b4e0bfd1f73$var$$internals","$ab910b4e0bfd1f73$var$normalizeHeader","header","$ab910b4e0bfd1f73$var$normalizeValue","$ab910b4e0bfd1f73$var$matchHeaderValue","isHeaderNameFilter","isRegExp","$ab910b4e0bfd1f73$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","findKey","setHeaders","headers1","rawHeaders","line","substring","$df2d499cd52e76e4$export$9099ad97b570f7c","tokens","tokensRE","$ab910b4e0bfd1f73$var$parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","normalized","char","$ab910b4e0bfd1f73$var$formatHeader","targets","asStrings","computed","accessors","defineAccessor","accessorName","toCamelCase","methodName","arg1","arg2","arg3","$ab910b4e0bfd1f73$var$buildAccessors","accessor","reduceDescriptors","mapped","headerValue","freezeMethods","$ab910b4e0bfd1f73$export$9099ad97b570f7c","fns","__CANCEL__","$72c229d47386b2e6$var$CanceledError","ERR_CANCELED","$72c229d47386b2e6$export$9099ad97b570f7c","$8109cc2f05b1499a$export$9099ad97b570f7c","isStandardBrowserEnv","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","baseURL","requestedURL","relativeURL","$1e3df8b363a687b9$export$9099ad97b570f7c","$f9e629b024d7e979$export$9099ad97b570f7c","msie","urlParsingNode","originURL","resolveURL","href","protocol","hash","hostname","port","pathname","charAt","location","requestURL","$b768e255c3763b4c$export$9099ad97b570f7c","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","$c1d845902db29ad8$var$progressEventReducer","isDownloadStream","bytesNotified","_speedometer","total","lengthComputable","progressBytes","rate","estimated","$300fd969b8682751$var$knownAdapters","http","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","isStandardBrowserWebWorkerEnv","auth","username","password","unescape","btoa","fullPath","$427947327d8a70e5$export$9099ad97b570f7c","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","$a7bc2db11cf84ff2$export$9099ad97b570f7c","statusText","$ebdc11c431a82b11$export$9099ad97b570f7c","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","$573c5d204b9c137e$export$9099ad97b570f7c","$300fd969b8682751$var$renderReason","reason","$300fd969b8682751$var$isResolvedHandle","$300fd969b8682751$export$9099ad97b570f7c","adapters","nameOrAdapter","rejectedReasons","reasons","$653a5cb06dcfc0ed$var$throwIfCancellationRequested","throwIfRequested","$0a1a1c4b56f79b2e$export$9099ad97b570f7c","$05e9f36c6b1a3f6c$export$9099ad97b570f7c","$d9befbd8f04e0558$var$headersToObject","config1","config2","getMergedValue","merge","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$3c2efb01c1f5a520$export$f2eb173e8f6e4130","$46cb9fd68947fccb$var$validators","$46cb9fd68947fccb$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","$46cb9fd68947fccb$export$9099ad97b570f7c","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$601b68ee8e3aaf80$var$validators","validators","$601b68ee8e3aaf80$var$Axios","instanceConfig","defaults","interceptors","configOrUrl","$d9befbd8f04e0558$export$9099ad97b570f7c","assertOptions","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","$653a5cb06dcfc0ed$export$9099ad97b570f7c","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","$601b68ee8e3aaf80$export$9099ad97b570f7c","$d8ce7e7d487fc645$var$CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","cancel1","$d8ce7e7d487fc645$export$9099ad97b570f7c","$5789319b06f875f5$var$HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","$5789319b06f875f5$export$9099ad97b570f7c","$8e49e994a297dd39$var$axios","$8e49e994a297dd39$var$createInstance","defaultConfig","instance","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","promises","spread","isAxiosError","payload","mergeConfig","AxiosHeaders","formToJSON","getAdapter","HttpStatusCode","default","$8e49e994a297dd39$export$9099ad97b570f7c","$55367ede8daa31ed$export$61ee696cc3cb767c","$55367ede8daa31ed$export$5a4ea5710f560276","$55367ede8daa31ed$export$a82b25881525d042","$55367ede8daa31ed$export$f9ab0ef0b3d83e07","$55367ede8daa31ed$export$9c4c3620fae35571","$55367ede8daa31ed$export$f2eb173e8f6e4130","$55367ede8daa31ed$export$8dbdea330bbd6b3c","$55367ede8daa31ed$export$ac2fd7e1ad209aef","$55367ede8daa31ed$export$4ec1510eb4a6dd07","$55367ede8daa31ed$export$a7171b34fcfc6c98","$55367ede8daa31ed$export$579ff91c4a4eeec","$55367ede8daa31ed$export$620a0a523ccfadc1","$55367ede8daa31ed$export$e996b35735a9209a","$55367ede8daa31ed$export$3841b31146d147e6","$55367ede8daa31ed$export$8d171d58269c6b98","$55367ede8daa31ed$export$1a12ca45983761be","$34654e6651b251b3$var$ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$34654e6651b251b3$export$9099ad97b570f7c","$53bbd9338c177aee$export$55029509b82b2e2b","$2feab5dba9ad5f59$var$RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","$2feab5dba9ad5f59$export$9099ad97b570f7c","$b29035dd30b69246$var$CircleStyle","setRadius","$b29035dd30b69246$export$9099ad97b570f7c","$98cbc37b0b44b767$var$Fill","color_","setColor","$98cbc37b0b44b767$export$9099ad97b570f7c","$073d49fd723c1fec$var$Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$073d49fd723c1fec$export$9099ad97b570f7c","$ef273152c7d412a1$var$Style","geometryFunction_","$ef273152c7d412a1$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","$ef273152c7d412a1$var$defaultStyles","$ef273152c7d412a1$export$33d0043adf82cc14","$ef273152c7d412a1$export$9099ad97b570f7c","$3a26b29c6487c166$var$taintedTestContext","$3a26b29c6487c166$var$IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","image1","$6378478f6911b3e1$var$calculateScale","wantedWidth","wantedHeight","$6378478f6911b3e1$var$Icon","scale1","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","cacheKey","iconImage_","crossOrigin1","imageState1","color1","$3a26b29c6487c166$export$7eb84799c931fe91","offset_","offsetOrigin_","offsetOrigin","initialOptions_","imageSize","setAnchor","iconImageSize","$6378478f6911b3e1$export$9099ad97b570f7c","$0f188cdd90b9a59a$var$Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$0f188cdd90b9a59a$export$9099ad97b570f7c","$38f909cc3372ad2b$var$numTypes","$38f909cc3372ad2b$export$a04479c6764fba36","$38f909cc3372ad2b$export$20d4db7e4693d97e","$38f909cc3372ad2b$export$8ec24df1de2b7ad0","$38f909cc3372ad2b$export$4538625949ac97b4","$38f909cc3372ad2b$export$aa61023351754e9e","$38f909cc3372ad2b$export$88a2bdda3c2346e9","$38f909cc3372ad2b$var$typeNames","$38f909cc3372ad2b$var$namedTypes","$38f909cc3372ad2b$export$9e94737c67f23a95","names","namedType","specific","$38f909cc3372ad2b$export$65e28083b9ef8cf0","oneType","otherType","$38f909cc3372ad2b$export$7057bb3991dcb656","$38f909cc3372ad2b$export$5a5441450e88ddd5","type1","operator","$38f909cc3372ad2b$export$340c65b6bbbe07df","variables","$38f909cc3372ad2b$export$a43e9d683f52ab7c","encoded","operator1","$38f909cc3372ad2b$var$parsers","$38f909cc3372ad2b$var$parseCallExpression","type2","$38f909cc3372ad2b$export$b55b3ce1e61a29e6","$38f909cc3372ad2b$var$createParser","$38f909cc3372ad2b$var$withArgs","operation","minArgs","maxArgs","argType","argCount","args1","expression","gotType","expectedType","argValidator","returnType","$90b033dce8a68b7f$export$dfcfb962b124097d","expected","$90b033dce8a68b7f$var$compileExpression","context1","$90b033dce8a68b7f$var$compileAssertionExpression","nameExpression","$90b033dce8a68b7f$var$compileAccessorExpression","op","$90b033dce8a68b7f$var$compileLogicalExpression","$90b033dce8a68b7f$var$compileComparisonExpression","$90b033dce8a68b7f$var$compileNumericExpression","$90b033dce8a68b7f$var$compileMatchExpression","$41af6d726b7d84d3$var$always","$41af6d726b7d84d3$export$8182eff27a6c7483","rules","evaluator","compiledRules","rule","styleLength","$41af6d726b7d84d3$export$7d3f96041d3be9cc","someMatched","filterEvaluator","else","styleEvaluator","$41af6d726b7d84d3$export$fa28442e279cf932","evaluationContext","$41af6d726b7d84d3$export$9c38bdf99a173de8","flatStyles","parsingContext","evaluators","flatStyle","evaluateFill","$41af6d726b7d84d3$var$buildFill","evaluateStroke","$41af6d726b7d84d3$var$buildStroke","evaluateText","prefix","evaluateValue","$41af6d726b7d84d3$var$stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","$41af6d726b7d84d3$var$numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","$41af6d726b7d84d3$var$booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","$41af6d726b7d84d3$var$sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","$41af6d726b7d84d3$var$numberArrayEvaluator","$41af6d726b7d84d3$var$buildText","evaluateImage","srcName","$41af6d726b7d84d3$var$requireString","evaluateAnchor","$41af6d726b7d84d3$var$coordinateEvaluator","evaluateOpacity","evaluateDisplacement","$41af6d726b7d84d3$var$optionalIconOrigin","$41af6d726b7d84d3$var$optionalIconAnchorUnits","$41af6d726b7d84d3$var$requireColorLike","$41af6d726b7d84d3$var$optionalColorLike","$41af6d726b7d84d3$var$optionalString","$41af6d726b7d84d3$var$requireNumberArray","$41af6d726b7d84d3$var$optionalNumberArray","$41af6d726b7d84d3$var$optionalNumber","$41af6d726b7d84d3$var$optionalSize","$41af6d726b7d84d3$var$optionalDeclutterMode","icon","$41af6d726b7d84d3$var$buildIcon","pointsName","$41af6d726b7d84d3$var$requireNumber","shape","$41af6d726b7d84d3$var$buildShape","evaluateRadius","circle","$41af6d726b7d84d3$var$buildCircle","$41af6d726b7d84d3$var$buildImage","evaluateZIndex","empty","evaluateColor","$41af6d726b7d84d3$var$colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","$41af6d726b7d84d3$var$requireSizeLike","$c2d701923a28fd18$var$Property","$c2d701923a28fd18$export$9099ad97b570f7c","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$c2d701923a28fd18$var$toStyleLike","styleFunction","$ef273152c7d412a1$export$4aaa4bacaec09e94","$ea10f0be0ccf1300$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$ea10f0be0ccf1300$export$c649c04369bd3370","$ea10f0be0ccf1300$export$2513c58bc344fc5c","$ea10f0be0ccf1300$export$84e3c67fd41b07f5","$ea10f0be0ccf1300$export$6cd4b1e0c0e7240c","$ea10f0be0ccf1300$export$9099ad97b570f7c","$3abff25fdef3af43$export$9099ad97b570f7c","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$4647f8432e21f43f$export$9099ad97b570f7c","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","pixelRatio1","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$2c014a0532f2a817$export$9099ad97b570f7c","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$b777a0d6747ca59c$export$9099ad97b570f7c","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f658eb6fb6f30dca$export$9099ad97b570f7c","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","tolerance1","$4c9f4d22282817f3$export$727907b347f8131a","chunks","cursor","chunkM","currentChunk","missing","$c96c7cc1550392c0$export$e8c34bbbade92a3a","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","$bf79381f09c26a2f$export$3964e67694391753","$659014459a345ad6$var$BATCH_CONSTRUCTORS","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$659014459a345ad6$export$9099ad97b570f7c","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$3da63b322060c6a2$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","$b24c8303d261dd7e$export$7326ac1b36a49776","$0291ffecc2419d1e$var$tmpExtent","$0291ffecc2419d1e$var$p1","$0291ffecc2419d1e$var$p2","$0291ffecc2419d1e$var$p3","$0291ffecc2419d1e$var$p4","$0291ffecc2419d1e$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$0291ffecc2419d1e$var$rtlRegEx","$0291ffecc2419d1e$var$horizontalTextAlign","align","$0291ffecc2419d1e$var$createTextChunks","acc","$0291ffecc2419d1e$export$9099ad97b570f7c","instructions1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","$0511c8c10849dc1a$export$1e20a6b365130d8c","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","$f0224bb0d7b72ca9$var$ORDER","$f0224bb0d7b72ca9$var$circlePixelIndexArrayCache","$f0224bb0d7b72ca9$export$9099ad97b570f7c","resolution1","allInstructions1","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","allInstructions","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","$f0224bb0d7b72ca9$export$f610334c339a4991","imageData","idx","maxExtent1","builderTypes","$10da3d821084ba35$export$9099ad97b570f7c","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","$5caa66f67d70c90b$export$36912b83e488cd77","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$d537647cd7e34764$export$5d244421488756f8","$19ef498e0fdaa7a3$var$GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$19ef498e0fdaa7a3$export$65a5cfeed6fd0c33","$19ef498e0fdaa7a3$export$f0ea347488340e3d","$19ef498e0fdaa7a3$export$522dfd100dd96ba1","$19ef498e0fdaa7a3$var$renderGeometry","$19ef498e0fdaa7a3$var$renderFeatureInternal","getGeometries","$fc50e91d05c5929c$export$9099ad97b570f7c","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","$d26dae22fe1d838f$export$e7468c0ae08395df","clipped","transforms","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","geometry1","zIndexKeys","geomAndStyle","kk","$d537647cd7e34764$export$9fd146a6491490e3","resultFeatures","$d537647cd7e34764$export$57fd269e987b81b8","executorGroups","vectorLayer1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","userExtent","$19ef498e0fdaa7a3$export$f3b3f9822f340683","dirty","renderFeature","replayGroupInstructions","$16c61758513a2147$export$9099ad97b570f7c","$29bc91a52a8276cc$var$container","$29bc91a52a8276cc$var$content","$29bc91a52a8276cc$var$closer","$29bc91a52a8276cc$var$infoModal","$29bc91a52a8276cc$var$infoButton","$29bc91a52a8276cc$var$munros","$29bc91a52a8276cc$var$bgLayer","onclick","$29bc91a52a8276cc$var$map","$29bc91a52a8276cc$var$setupPopup","$29bc91a52a8276cc$var$popup","autoPanAnimation","blur","munroDetails","region","latlng_lat","latlng_lng","gridref_letters","gridref_eastings","gridref_northings","meaning","$29bc91a52a8276cc$var$buildMunroFeature","munro","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","$1126d50c93949fbd$export$9099ad97b570f7c","$a30ff5eb31220d12$export$9099ad97b570f7c","$29bc91a52a8276cc$var$munroStyle","munroFeature","munroLayer"],"version":3,"file":"index.d43a54ca.js.map"}