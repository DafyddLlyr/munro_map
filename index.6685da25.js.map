{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/has.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults.js","node_modules/process/browser.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","module.exports = {\n  \"version\": \"0.24.0\"\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","module.exports = require('./lib/axios');","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","\nimport { Feature, Map, View } from 'ol';\nimport Overlay from 'ol/Overlay';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport axios from 'axios';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Coordinate } from 'ol/coordinate';\nimport Geometry from 'ol/geom/Geometry';\nimport RenderFeature from 'ol/render/Feature';\nimport { Fill, RegularShape, Stroke, Style } from 'ol/style';\n\nconst container = document.getElementById('popup') as HTMLElement;\nconst content = document.getElementById('popup-content') as HTMLElement;\nconst closer = document.getElementById('popup-closer') as HTMLElement;\nconst infoModal = document.getElementById('info-modal') as HTMLElement;\nconst infoButton = document.getElementById('info') as HTMLElement;\n\nconst munros: Feature<Point>[] = []\n\nconst bgLayer = new TileLayer({\n  source: new XYZ({\n    url: \"https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=IGPIexDjG8gGAkN35tKd3VoLnFKykGsG\",\n    crossOrigin: '*'\n  }),\n})\n\ninfoButton.onclick = (e) => infoModal.classList.toggle('info-visible');\ninfoModal.onclick = (e) => infoModal.classList.toggle('info-visible');\n\nconst map = new Map({\n  target: 'map',\n  layers: [bgLayer],\n  view: new View({\n    projection: 'EPSG:3857',\n    minZoom: 8,\n    maxZoom: 20,\n    center: fromLonLat([-5.082808, 56.984374]),\n    zoom: 8\n  })\n});\n\nmap.on(\"click\", (e) => {\n  map.forEachFeatureAtPixel(e.pixel, (feature, layer) => {\n    setupPopup(e.coordinate, feature);\n    map.addOverlay(popup);\n  })\n});\n\nconst popup = new Overlay({\n  element: container,\n  autoPan: true,\n  autoPanAnimation: {\n    duration: 250,\n  },\n});\n\ncloser.onclick = () => {\n  popup.setPosition(undefined);\n  closer!.blur();\n  return false;\n};\n\nconst setupPopup = (coord: Coordinate, feature: RenderFeature | Feature<Geometry>) => {\n  popup.setPosition(coord);\n  const props = feature.getProperties()\n  const munroDetails = `\n    <div class=\"munro-details\">\n      <h2 class=\"munro-name\">${props.name}</h2>\n      <hr />\n      <p><b>Height:</b> <span>${props.height}m</span></p>\n      <p><b>Region:</b> <span>${props.region}</span></p>\n      <p><b>Lat Long:</b> <span>${props.latlng_lat}, ${props.latlng_lng}</span></p>\n      <p><b>Grid Ref:</b> <span>${props.gridref_letters} ${props.gridref_eastings} ${props.gridref_northings}</span></p>\n      <p><b>Meaning:</b> <span>${props.meaning}</span></p>\n    </div>\n    `\n  content!.innerHTML = munroDetails;\n}\n\nconst buildMunroFeature = (munro: { [key: string]: any }) => (\n  new Feature({\n    geometry: new Point(fromLonLat([munro.latlng_lng, munro.latlng_lat])),\n    ...munro\n  })\n)\n\nconst munroStyle = new Style({\n  image: new RegularShape({\n    fill: new Fill({\n      color: '#8bc34a'\n    }),\n    stroke: new Stroke({\n      color: 'black'\n    }),\n    points: 3,\n    radius: 10,\n  }),\n})\n\naxios.get(\"https://munroapi.herokuapp.com/munros\").then(\n  response => {\n    response.data.forEach((munro: { [key: string]: any }) => {\n      const munroFeature = buildMunroFeature(munro)\n      munros.push(munroFeature)\n    })\n\n    const munroLayer = new VectorLayer({\n      source: new VectorSource({\n        features: munros,\n      }),\n      style: munroStyle,\n    })\n\n    map.addLayer(munroLayer)\n  }\n);"],"names":["$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$3dc3825e79de4e26$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","$106eee51eb5027f3$export$1f4f991ce94838ce","begin","end","tmp","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","push","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$360d9a9621464d34$export$9099ad97b570f7c","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","changed","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$5871a677c2d47110$exports","default","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$4a6933b8a2a12a45$export$9099ad97b570f7c","AssertionError","code","message","split","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","$6074b396fc14353d$export$7cf753b6a6534915","styles_1","getZIndex","$6074b396fc14353d$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$6074b396fc14353d$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$8f7fdb7cfb75e879$exports","$ea4701d35a7bcfcb$var$transformStringDiv","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","options","defineProperty","window","error","$ea4701d35a7bcfcb$export$77f8d2fc923b14e3","transform","c","d","e","f","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","coordinate","x","y","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","mat","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","extent","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$14e1765886db335a","opt_extent","$4b239fe5fbbd9442$export$d6a0542127b96c83","slice","$4b239fe5fbbd9442$export$c7d6a927f416dd39","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$4f55e2d709659e7b","extent1","extent2","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$4b239fe5fbbd9442$var$_boundingExtentXYs","$1cba8f77b2fc8147$export$4b8705656de00c72","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","t","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","PI","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$4a3eb4cf07e68bcb$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","map","Number","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$e2ca19531263975f$var$getKey","setSize","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$a91eb7d9c06d6003$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$a979859450d27aab$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","zoom","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","cosAngle","sinAngle","$04466ada99459d91$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$04466ada99459d91$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$c8891acc328b159c$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$ffba12b1b1caac35$var$__extends","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$eb83c055c71b92dc$export$e04cd5eb7e7428c6","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$e938c51870f186d7$export$954ce77093b0d494","element","offsetWidth","marginLeft","marginRight","$e938c51870f186d7$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","$e938c51870f186d7$export$f0994cfd84ab1152","lastChild","$3f8842a01a05d29f$export$6ad0413f8fea3c71","$3f8842a01a05d29f$export$70c5a077e5d6beb9","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","measureElement","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","$3f8842a01a05d29f$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$3f8842a01a05d29f$export$a2bf16790cd8f004","metrics","$3f8842a01a05d29f$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$3f8842a01a05d29f$export$4b2ca35321179b27","$3f8842a01a05d29f$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$3f8842a01a05d29f$var$executeLabelInstructions","drawImage","restore","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","event_1","$ffba12b1b1caac35$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","getDataAtPixel","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","$3bf57b305f2befe1$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$1eec589ef9f03c3a$export$9099ad97b570f7c","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$617763bc4bd20684$export$9099ad97b570f7c","$9e10b55cc3e5aff2$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$13550698a4b6771e","opt_projection","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$352fd07bdd93dc1e","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$a7d473ff80a6a3b","$fa384abe43b1f395$export$f87215506b474b9e","$fa384abe43b1f395$export$30407c756b1c3707","sourceUnits","userUnits","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","pow","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$49a9dfb608ce5f95$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","jj","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$3185dd1b8645ed57$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","ret","$1c34f05d540d121d$export$40f3d9558cf6e846","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$3bf57b305f2befe1$exports","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$85c0a5b12bf0966d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","parseFloat","getClientRects","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","listenerKeys","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","factor","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","charCode","charCodeAt","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$070ebaa1cd5f7208$export$b403fbac94228e09","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$599cb9096c101a3c$export$9099ad97b570f7c","$28f1cbaddf44444c$var$Property","$28f1cbaddf44444c$export$9099ad97b570f7c","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$28f1cbaddf44444c$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$2afaec311bc855ad$export$9099ad97b570f7c","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$d3c91b778f21fae8$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$7971363be443bf07$exports","$848a86622bea988b$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$0704a0db83121540$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","alpha","alphaChanged","endTransition","getImage","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$d3c91b778f21fae8$exports","$0704a0db83121540$export$9099ad97b570f7c","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$150b5bd0bfcaba04$var$__extends","release","refreshInterimChain","getTileCoord","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","$244f7fbdc76b1fe6$var$__extends","getPixelRatio","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$244f7fbdc76b1fe6$exports","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$9d0a6d02ef4dbef8$exports","listenImage","$150b5bd0bfcaba04$exports","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7125477b3730d11b$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","closePath","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$1cba8f77b2fc8147$export$27dc5719ceda6735","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","pruneExceptNewestZ","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$2317568ccbc72da2$var$__extends","refresh","setAttributions","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$b8c0af040d9dc0fe$exports","tmpSize","tileOptions","$824311a81ea848b7$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","$2317568ccbc72da2$exports","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$88df26af4a8f1ef6$export$47abe479fba0e55d","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","tileClass","$00b94bfd7801f3c8$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$938fa94ea91032bd$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$62cad3baa594a7e9$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$971276aecb1c0996$export$9099ad97b570f7c","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$860c7bb87df2949a$export$9099ad97b570f7c","$5de5d36893087699$export$8dbdea330bbd6b3c","$2c6eefd9d65aa1d3$export$9099ad97b570f7c","$5f956e0dd2b94819$var$withCredentials","$5f956e0dd2b94819$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5f956e0dd2b94819$export$4355fa6d12274ca5","dataProjection","addFeatures","$e56c3ef950abbf44$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$e56c3ef950abbf44$var$__extends","$e56c3ef950abbf44$export$9099ad97b570f7c","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$2f7370a015f9c7ae$var$axios","$2f7370a015f9c7ae$var$createInstance","defaultConfig","$kOlof","instance","$3Z6Ma","request","$2QA3o","create","instanceConfig","$kXDoc","Axios","Cancel","parcelRequire","CancelToken","isCancel","VERSION","version","promises","spread","isAxiosError","module","exports","$212c67a380367559$var$toString","$212c67a380367559$var$isArray","$212c67a380367559$var$isUndefined","$212c67a380367559$var$isObject","$212c67a380367559$var$isPlainObject","$212c67a380367559$var$isFunction","$212c67a380367559$var$forEach","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","product","merge","$212c67a380367559$var$merge","assignValue","trim","str","stripBOM","content","$f26911cd5b02fa1c$var$validators","$8v4hu","validators","$f26911cd5b02fa1c$var$Axios","defaults","interceptors","$kL2VT","config","method","transitional","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","responseInterceptorChain","chain","$5j6Lx","newConfig","onFulfilled","onRejected","getUri","$kZoBJ","params","paramsSerializer","$f47c97b9ed82a515$var$encode","encodeURIComponent","serializedParams","parts","toISOString","hashmarkIndex","$f1ca78cb816f8862$var$InterceptorManager","handlers","use","eject","$3dd3f9a01777c9b3$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$bi5pC","headers","$89XL7","transformRequest","common","adapter","$7xSaK","transformResponse","reason","$8RCQj","fns","$57e5a2f79d444be0$var$DEFAULT_CONTENT_TYPE","$57e5a2f79d444be0$var$setContentTypeIfUnset","$57e5a2f79d444be0$var$defaults","$2m9Bw","$5PZl6","rawValue","parser","encoder","parse","$57e5a2f79d444be0$var$stringifySafely","strictJSONParsing","$2wnpu","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","$1b75160fe44457c8$var$cachedSetTimeout","$1b75160fe44457c8$var$cachedClearTimeout","$1b75160fe44457c8$var$process","$1b75160fe44457c8$var$defaultSetTimout","$1b75160fe44457c8$var$defaultClearTimeout","$1b75160fe44457c8$var$runTimeout","fun","$1b75160fe44457c8$var$currentQueue","$1b75160fe44457c8$var$queue","$1b75160fe44457c8$var$draining","$1b75160fe44457c8$var$queueIndex","$1b75160fe44457c8$var$cleanUpNextTick","$1b75160fe44457c8$var$drainQueue","run","marker","$1b75160fe44457c8$var$runClearTimeout","$1b75160fe44457c8$var$Item","$1b75160fe44457c8$var$noop","nextTick","browser","env","argv","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","normalizedName","toUpperCase","description","number","fileName","lineNumber","columnNumber","onCanceled","requestData","requestHeaders","unsubscribe","auth","username","password","unescape","Authorization","btoa","fullPath","$jPy0I","baseURL","onloadend","responseHeaders","$c3cCp","getAllResponseHeaders","statusText","$3F1uM","onreadystatechange","readyState","responseURL","onabort","$eCXVv","ontimeout","timeoutErrorMessage","xsrfValue","$kAbbi","$92u2k","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","write","expires","path","domain","secure","cookie","toGMTString","decodeURIComponent","requestedURL","$1jtWg","$3qklg","test","relativeURL","$8c5f8d9929198423$var$ignoreDuplicateOf","parsed","line","originURL","msie","urlParsingNode","resolveURL","href","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","$838592e079009531$var$Cancel","__CANCEL__","config1","config2","getMergedValue","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","$63048a22396a4600$var$validators","thing","$63048a22396a4600$var$deprecatedWarnings","validator","formatMessage","opt","desc","$63048a22396a4600$require$VERSION","opts","schema","allowUnknown","$5f70b77111eec3c4$var$CancelToken","executor","resolvePromise","token","_listeners","onfulfilled","_resolve","payload","$618c64b4fc248377$exports","$e12c8bb44acdd73c$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$b30624b926c21759$export$55029509b82b2e2b","$1930bd353b5dd973$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$1930bd353b5dd973$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$bf4e1aa287034bcd$export$9099ad97b570f7c","CircleStyle","$bf4e1aa287034bcd$var$__extends","setRadius","$1930bd353b5dd973$exports","$2977a884eb0897b3$export$9099ad97b570f7c","Fill","color_","setColor","$2051e0d06771d465$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$2bbb9f7aac5f2c94$var$Style","Style","geometryFunction_","$2bbb9f7aac5f2c94$var$defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$2bbb9f7aac5f2c94$var$defaultStyles","$2bbb9f7aac5f2c94$export$33d0043adf82cc14","$bf4e1aa287034bcd$exports","$2bbb9f7aac5f2c94$export$9099ad97b570f7c","$94242b274ad2f2ed$var$Property","$94242b274ad2f2ed$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$94242b274ad2f2ed$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$2bbb9f7aac5f2c94$export$4aaa4bacaec09e94","$df0635a74a7822e1$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$df0635a74a7822e1$export$c649c04369bd3370","$df0635a74a7822e1$export$2513c58bc344fc5c","$df0635a74a7822e1$export$84e3c67fd41b07f5","$df0635a74a7822e1$export$6cd4b1e0c0e7240c","$df0635a74a7822e1$export$9099ad97b570f7c","$4d95c64ce828af6b$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$602faaef6592ac32$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$602faaef6592ac32$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1629b032c2c05b7a$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1629b032c2c05b7a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$602faaef6592ac32$exports","$8503ee84237976ea$export$9099ad97b570f7c","CanvasLineStringBuilder","$8503ee84237976ea$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$0537f4f8a36c0b60$export$9099ad97b570f7c","CanvasPolygonBuilder","$0537f4f8a36c0b60$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$4f3943dd3f2f8692$export$9099ad97b570f7c","$cc27ec6f48b585fa$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$d4f3e170528ef1db$export$3964e67694391753","$d4f3e170528ef1db$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$d4f3e170528ef1db$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$ad370384483cb7cc$var$BATCH_CONSTRUCTORS","$0537f4f8a36c0b60$exports","$1629b032c2c05b7a$exports","$8503ee84237976ea$exports","$d4f3e170528ef1db$exports","$ad370384483cb7cc$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e33d80fd92b6dc93$export$9099ad97b570f7c","$2ec7b6c5a4a595c6$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$2c5e6ed7a2421d9f$export$7326ac1b36a49776","$fbecb62010b6a32d$var$tmpExtent","$fbecb62010b6a32d$var$p1","$fbecb62010b6a32d$var$p2","$fbecb62010b6a32d$var$p3","$fbecb62010b6a32d$var$p4","$fbecb62010b6a32d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$fbecb62010b6a32d$var$rtlRegEx","$fbecb62010b6a32d$var$horizontalTextAlign","align","TEXT_ALIGN","$fbecb62010b6a32d$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$3f8842a01a05d29f$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","cc","part","ii_1","execute","executeHitDetection","$93b70df51285fcd1$var$ORDER","$93b70df51285fcd1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$93b70df51285fcd1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$93b70df51285fcd1$export$f610334c339a4991","featureCallback","imageData","idx","result_1","opt_builderTypes","builderTypes","$93b70df51285fcd1$export$9099ad97b570f7c","$699b1a7f567cffb4$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$699b1a7f567cffb4$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$7be39e8ef53520fe$export$9099ad97b570f7c","$58814494b0ffc538$export$9099ad97b570f7c","$e40ce0ac0e40cff8$var$taintedTestContext","$e40ce0ac0e40cff8$var$IconImage","IconImage","imageState_","tainted_","$e40ce0ac0e40cff8$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e40ce0ac0e40cff8$export$7eb84799c931fe91","$e3932ef79b782730$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$e40ce0ac0e40cff8$exports","offset_","offsetOrigin_","offsetOrigin","$e3932ef79b782730$var$__extends","setAnchor","iconImageSize","$73cf95c6d003b56f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$73cf95c6d003b56f$export$65a5cfeed6fd0c33","feature1","feature2","$73cf95c6d003b56f$export$f0ea347488340e3d","$73cf95c6d003b56f$export$522dfd100dd96ba1","$73cf95c6d003b56f$var$renderGeometry","$73cf95c6d003b56f$var$renderFeatureInternal","getGeometries","$b2ab5ea43be4855f$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$b2ab5ea43be4855f$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ea4701d35a7bcfcb$export$e7468c0ae08395df","clipped","transforms","$699b1a7f567cffb4$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$e3932ef79b782730$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$ce4b2e7cdf1ad653$export$9fd146a6491490e3","resultFeatures","$ce4b2e7cdf1ad653$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$4b239fe5fbbd9442$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","userExtent_1","$73cf95c6d003b56f$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$d16efd1165653604$export$9099ad97b570f7c","VectorLayer","$d16efd1165653604$var$__extends","$b2ab5ea43be4855f$exports","$94242b274ad2f2ed$exports","$0c7c468abb426e87$var$container","$0c7c468abb426e87$var$content","$0c7c468abb426e87$var$closer","$0c7c468abb426e87$var$infoModal","$0c7c468abb426e87$var$infoButton","$0c7c468abb426e87$var$munros","$0c7c468abb426e87$var$bgLayer","$adffffba3f1e99ac$exports","$72436993edd2ca04$exports","onclick","$0c7c468abb426e87$var$map","$a9d71ecad6ede6f8$exports","$0c7c468abb426e87$var$setupPopup","$0c7c468abb426e87$var$popup","$28f1cbaddf44444c$exports","blur","props","munroDetails","region","latlng_lat","latlng_lng","gridref_letters","gridref_eastings","gridref_northings","meaning","$0c7c468abb426e87$var$munroStyle","munro","munroFeature","$6074b396fc14353d$exports","$0c7c468abb426e87$var$buildMunroFeature","munroLayer","$d16efd1165653604$exports","$e56c3ef950abbf44$exports"],"version":3,"file":"index.6685da25.js.map"}