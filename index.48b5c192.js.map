{"mappings":"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","sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/math.js","node_modules/ol/color.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/tilegrid/common.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/css.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/size.js","node_modules/ol/Map.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Overlay.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/ImageState.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/Tile.js","node_modules/ol/Image.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/Source.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/rbush/rbush.min.js","node_modules/ol/source/XYZ.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/Text.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/geom/flat/length.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/layer/Vector.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if(!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)){\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\n      } else if(utils.isString(contentType = requestHeaders.getContentType())){\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'))\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","\nimport { Feature, Map, View } from 'ol';\nimport Overlay from 'ol/Overlay';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport axios from 'axios';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Coordinate } from 'ol/coordinate';\nimport Geometry from 'ol/geom/Geometry';\nimport RenderFeature from 'ol/render/Feature';\nimport { Fill, RegularShape, Stroke, Style } from 'ol/style';\n\nconst container = document.getElementById('popup') as HTMLElement;\nconst content = document.getElementById('popup-content') as HTMLElement;\nconst closer = document.getElementById('popup-closer') as HTMLElement;\nconst infoModal = document.getElementById('info-modal') as HTMLElement;\nconst infoButton = document.getElementById('info') as HTMLElement;\n\nconst munros: Feature<Point>[] = []\n\nconst bgLayer = new TileLayer({\n  source: new XYZ({\n    url: \"https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=IGPIexDjG8gGAkN35tKd3VoLnFKykGsG\",\n    crossOrigin: '*'\n  }),\n})\n\ninfoButton.onclick = (e) => infoModal.classList.toggle('info-visible');\ninfoModal.onclick = (e) => infoModal.classList.toggle('info-visible');\n\nconst map = new Map({\n  target: 'map',\n  layers: [bgLayer],\n  view: new View({\n    projection: 'EPSG:3857',\n    minZoom: 8,\n    maxZoom: 20,\n    center: fromLonLat([-5.082808, 56.984374]),\n    zoom: 8\n  })\n});\n\nmap.on(\"click\", (e) => {\n  map.forEachFeatureAtPixel(e.pixel, (feature, layer) => {\n    setupPopup(e.coordinate, feature);\n    map.addOverlay(popup);\n  })\n});\n\nconst popup = new Overlay({\n  element: container,\n  autoPan: true,\n  autoPanAnimation: {\n    duration: 250,\n  },\n});\n\ncloser.onclick = () => {\n  popup.setPosition(undefined);\n  closer!.blur();\n  return false;\n};\n\nconst setupPopup = (coord: Coordinate, feature: RenderFeature | Feature<Geometry>) => {\n  popup.setPosition(coord);\n  const props = feature.getProperties()\n  const munroDetails = `\n    <div class=\"munro-details\">\n      <h2 class=\"munro-name\">${props.name}</h2>\n      <hr />\n      <p><b>Height:</b> <span>${props.height}m</span></p>\n      <p><b>Region:</b> <span>${props.region}</span></p>\n      <p><b>Lat Long:</b> <span>${props.latlng_lat}, ${props.latlng_lng}</span></p>\n      <p><b>Grid Ref:</b> <span>${props.gridref_letters} ${props.gridref_eastings} ${props.gridref_northings}</span></p>\n      <p><b>Meaning:</b> <span>${props.meaning}</span></p>\n    </div>\n    `\n  content!.innerHTML = munroDetails;\n}\n\nconst buildMunroFeature = (munro: { [key: string]: any }) => (\n  new Feature({\n    geometry: new Point(fromLonLat([munro.latlng_lng, munro.latlng_lat])),\n    ...munro\n  })\n)\n\nconst munroStyle = new Style({\n  image: new RegularShape({\n    fill: new Fill({\n      color: '#8bc34a'\n    }),\n    stroke: new Stroke({\n      color: 'black'\n    }),\n    points: 3,\n    radius: 10,\n  }),\n})\n\naxios.get(\"https://munroapi.herokuapp.com/munros\").then(\n  response => {\n    response.data.forEach((munro: { [key: string]: any }) => {\n      const munroFeature = buildMunroFeature(munro)\n      munros.push(munroFeature)\n    })\n\n    const munroLayer = new VectorLayer({\n      source: new VectorSource({\n        features: munros,\n      }),\n      style: munroStyle,\n    })\n\n    map.addLayer(munroLayer)\n  }\n);"],"names":["$175694b649fdbaa2$export$9099ad97b570f7c","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$3dc3825e79de4e26$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","disposed","dispose","disposeInternal","$106eee51eb5027f3$export$235915d17ff56858","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","candidate","$106eee51eb5027f3$export$1f4f991ce94838ce","begin","end","tmp","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","$360d9a9621464d34$export$9099ad97b570f7c","$397f0f5ed9a3050c$export$ff95bcce2965a200","thisArg","once","bind","originalListener","apply","arguments","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","key","$c022d33ed6bb5ca2$var$Observable","on","onInternal","onceInternal","un","unInternal","revision_","changed","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","prototype","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","key1","oldValue1","oldValue","$8f7fdb7cfb75e879$export$9099ad97b570f7c","values1","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","oldValue2","values","key2","applyProperties","source","unset","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorMessage","$6074b396fc14353d$var$Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","$6074b396fc14353d$export$7cf753b6a6534915","setId","id","name","$6074b396fc14353d$export$9099ad97b570f7c","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","element","index1","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","array","options","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","pop","extend","i1","ii1","forEach","f","array1","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","test","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","defineProperty","window","error","$ea4701d35a7bcfcb$export$77f8d2fc923b14e3","transform","c","d","e","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","coordinate","x","y","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","det","mat","$ea4701d35a7bcfcb$var$transformStringDiv","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$a13b08ece8514024$export$9099ad97b570f7c","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","extent","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$14e1765886db335a","dest","$4b239fe5fbbd9442$export$d6a0542127b96c83","slice","$4b239fe5fbbd9442$export$c7d6a927f416dd39","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$4f55e2d709659e7b","extent1","extent2","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","$4b239fe5fbbd9442$export$eaa5fa57bd4e25f6","cosRotation","sinRotation","xCos","xSin","yCos","ySin","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","stops","width","height","xs","ys","l","$4b239fe5fbbd9442$var$_boundingExtentXYs","$4b239fe5fbbd9442$export$5a0d9577a24f3c5b","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$1cba8f77b2fc8147$export$4b8705656de00c72","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","t","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","PI","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$1cba8f77b2fc8147$export$3497369f53ce744c","decimals","factor","pow","round","$1cba8f77b2fc8147$export$88807bfbd2f98762","$1cba8f77b2fc8147$export$bc09dedfee4dad59","ceil","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","$4a3eb4cf07e68bcb$export$21528ce64591bf2","cache","cacheSize","s","g","exec","hasAlpha","parseInt","substr","startsWith","split","map","Number","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","$e2ca19531263975f$var$IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","$e2ca19531263975f$var$getKey","setSize","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","CENTER","RESOLUTION","ROTATION","$9e10b55cc3e5aff2$export$af68584dedf5e52c","$02080a5168d333d1$export$9099ad97b570f7c","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","log","tan","$4cdcea7942371c6e$var$EPSG3857Projection","point","cosh","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","output","dimension","$4cdcea7942371c6e$export$f361696640082386","atan","exp","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","cosAngle","sinAngle","$04466ada99459d91$export$5a0d9577a24f3c5b","worldsAway","$04466ada99459d91$export$c8ebaff90a21375a","sourceExtentWidth","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$8df69efa9823885c$var$levels","info","warn","none","$8df69efa9823885c$var$level","$8df69efa9823885c$export$5db1af49deb5cdf6","args","console","$fa384abe43b1f395$var$showCoordinateWarning","$fa384abe43b1f395$export$95cd20be0944d6c1","disable","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","pointResolution","getter","projUnits","toEPSG4326","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$13550698a4b6771e","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$352fd07bdd93dc1e","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$a7d473ff80a6a3b","$fa384abe43b1f395$export$f87215506b474b9e","$fa384abe43b1f395$export$30407c756b1c3707","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","result","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$49a9dfb608ce5f95$export$92106241c01aa541","j","$49a9dfb608ce5f95$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","$e8fe802d0684ce0f$export$1bd42086bda9cade","revision","squaredTolerance","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$9099ad97b570f7c","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","tmpPoint","squaredDistance","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","jj","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","$3185dd1b8645ed57$export$d82a8a3167f968d","$3185dd1b8645ed57$export$db289937da1f5213","endss","coordinatesss","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$var$LinearRing","coordinates1","layout1","maxDelta_","maxDeltaRevision_","getArea","$43c0695b48c31937$export$9099ad97b570f7c","$fd187036c4ad2ec2$var$Point","$4b239fe5fbbd9442$export$b6ab620e694fb080","$6cb5b4913a2f0936$export$a53e62528b652807","$fd187036c4ad2ec2$export$9099ad97b570f7c","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","ret","$1c34f05d540d121d$export$40f3d9558cf6e846","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$f14bd9270666b480","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","ends1","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$4d09fd224bce9aac$var$animationCallback","returnValue","setTimeout","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","position","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","options1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","options2","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","degrees","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$4d09fd224bce9aac$export$535fae5a159fbda4","rotationConstraint","enableRotation","constrainRotation","theta","$a18de7eaf14a0b33$export$37e537ca821cbb20","$4d09fd224bce9aac$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","$c8891acc328b159c$export$16970faadcd3f29b","layerState","$c8891acc328b159c$export$9099ad97b570f7c","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","source1","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerState1","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","$23233cffd63dbe95$var$expireIconCache","map1","$23233cffd63dbe95$export$9099ad97b570f7c","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","m","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","$ffba12b1b1caac35$export$9099ad97b570f7c","inversePixelTransform","context","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$e938c51870f186d7$export$fe55455cced7aebb","canvasPool","settings","canvas","shift","getContext","$e938c51870f186d7$export$66cdde09c617964d","clearRect","$e938c51870f186d7$export$954ce77093b0d494","offsetWidth","marginLeft","marginRight","$e938c51870f186d7$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","$e938c51870f186d7$export$f0994cfd84ab1152","lastChild","$3f8842a01a05d29f$export$6ad0413f8fea3c71","$3f8842a01a05d29f$export$70c5a077e5d6beb9","$3f8842a01a05d29f$export$907cf5cff4a8acb1","$3f8842a01a05d29f$var$measureFont","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","$3f8842a01a05d29f$export$6491effd8671e9f6","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$3f8842a01a05d29f$export$a2bf16790cd8f004","measureElement","metrics","$3f8842a01a05d29f$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureText","$3f8842a01a05d29f$export$4b2ca35321179b27","reduce","curr","$3f8842a01a05d29f$export$3004e0c7927eb2d1","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","$3f8842a01a05d29f$var$executeLabelInstructions","drawImage","restore","$de107509ffcc1e1e$export$9099ad97b570f7c","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","layerIndex","sourceState","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","layers","renderDeclutter","$3bf57b305f2befe1$export$88ab4fe370923b6f","layer1","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$var$LayerGroup","layers1","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","layer2","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3bf57b305f2befe1$export$9099ad97b570f7c","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","$d4f51dc221fadaed$export$9099ad97b570f7c","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","priorityFunction1","$1eec589ef9f03c3a$export$9099ad97b570f7c","$5e7cdcfae3171aaa$export$9099ad97b570f7c","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$8f4a601d9be32279$export$9099ad97b570f7c","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$061c199bdbf67255$export$9099ad97b570f7c","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","element1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$c0271bd4f0f131b5$export$9099ad97b570f7c","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$a099fe81d7933b1b$export$9099ad97b570f7c","delta1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","setActive","getActive","mapBrowserEvent","active","$05d04f741d9f44ea$export$9099ad97b570f7c","delta_","stopEvent","browserEvent","shiftKey","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","getTargetElement","hasAttribute","targetElement","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","isContentEditable","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getDistance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$fba38e1bcb241519$export$9099ad97b570f7c","lastAngle_","getSize","$aceb96e89d56f634$export$9099ad97b570f7c","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","mapBrowserEvent1","$20cb6644c41e6461$export$9099ad97b570f7c","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","out_","out","$e076c91ce81ba0fd$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$231d0cdbd522b255$export$9099ad97b570f7c","$719344b2915a5282$export$2f688d8a41d1df21","$49ab15a508fcdc65$export$9099ad97b570f7c","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","delay1","lastIndex","firstIndex","$3750bcddcbf4c872$export$9099ad97b570f7c","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","lastDistance_","lastScaleDelta_","scaleDelta","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","$a9d71ecad6ede6f8$var$removeLayerMapProperty","$a9d71ecad6ede6f8$var$setLayerMapProperty","$a9d71ecad6ede6f8$export$9099ad97b570f7c","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","$a9d71ecad6ede6f8$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attribution","attributionOptions","$8e518928dc7f8e93$export$b403fbac94228e09","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$7983044494ecba81$export$b403fbac94228e09","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","$5e7cdcfae3171aaa$export$f7de9366327711a7","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$28f1cbaddf44444c$var$Property","$28f1cbaddf44444c$export$9099ad97b570f7c","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$2afaec311bc855ad$export$9099ad97b570f7c","$7971363be443bf07$export$9099ad97b570f7c","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","renderIfReadyAndVisible","loadImage","imageState","$d3c91b778f21fae8$export$859d51369429a63b","$d3c91b778f21fae8$var$pixelContext","$d3c91b778f21fae8$export$9099ad97b570f7c","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$150b5bd0bfcaba04$export$9099ad97b570f7c","state1","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$9d0a6d02ef4dbef8$export$d65c8ce7e335cde2","reject","handleLoad","unlisten","handleError","$9d0a6d02ef4dbef8$export$d236c5042cfc1ed2","$00b94bfd7801f3c8$export$9099ad97b570f7c","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","$00b94bfd7801f3c8$var$getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","loadHandler","errorHandler","img","listening","decoding","loaded","catch","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","$8d02cc6e51329a90$export$9099ad97b570f7c","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision1","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$72092921cefc513c$var$brokenDiagonalRendering_","$72092921cefc513c$export$859d51369429a63b","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","closePath","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$1cba8f77b2fc8147$export$27dc5719ceda6735","$72092921cefc513c$var$isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","targetResolution1","sourceResolution1","targetExtent1","leftToLoad","sourceListenKey","unlistenSources_","$848a86622bea988b$var$TileRange","containsTileRange","getHeight","getWidth","$848a86622bea988b$export$ea8082d0226d35a5","minX1","maxX1","minY1","maxY1","$848a86622bea988b$export$9099ad97b570f7c","$0704a0db83121540$export$9099ad97b570f7c","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileLayer1","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$adffffba3f1e99ac$export$9099ad97b570f7c","$350327925a545431$export$9099ad97b570f7c","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","$298e07180ebbc18c$export$ea8082d0226d35a5","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","pruneExceptNewestZ","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","$2317568ccbc72da2$export$9099ad97b570f7c","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","strict","compare","every","currentVal","res","$106eee51eb5027f3$export$fd1d1d368f0c3e6f","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","half","$824311a81ea848b7$export$8434c8db61edbf9d","$824311a81ea848b7$export$9099ad97b570f7c","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","tileSize1","getTileCoordForTileUrlFunction","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$var$UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","$88df26af4a8f1ef6$export$47abe479fba0e55d","$1dbd919805fd1d18$export$9099ad97b570f7c","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$72436993edd2ca04$export$9099ad97b570f7c","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$62cad3baa594a7e9$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$971276aecb1c0996$export$9099ad97b570f7c","maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$860c7bb87df2949a$export$9099ad97b570f7c","$5de5d36893087699$export$8dbdea330bbd6b3c","$5f956e0dd2b94819$var$withCredentials","$5f956e0dd2b94819$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5f956e0dd2b94819$export$4355fa6d12274ca5","dataProjection","addFeatures","$e56c3ef950abbf44$export$e3e368afaf9a4fc7","feature1","features2","$e56c3ef950abbf44$export$9099ad97b570f7c","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection1","features1","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","feature2","length1","length2","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","features3","getFeaturesAtCoordinate","getFeaturesInExtent","$4b239fe5fbbd9442$export$7453f195793a5271","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$212c67a380367559$var$toString","$212c67a380367559$var$getPrototypeOf","$212c67a380367559$var$kindOf","create","thing","str","$212c67a380367559$var$kindOfTest","$212c67a380367559$var$typeOfTest","$212c67a380367559$var$isArray","$212c67a380367559$var$isUndefined","$212c67a380367559$var$isArrayBuffer","$212c67a380367559$var$isString","$212c67a380367559$var$isFunction","$212c67a380367559$var$isNumber","$212c67a380367559$var$isObject","$212c67a380367559$var$isPlainObject","Symbol","toStringTag","iterator","$212c67a380367559$var$isDate","$212c67a380367559$var$isFile","$212c67a380367559$var$isBlob","$212c67a380367559$var$isFileList","$212c67a380367559$var$isURLSearchParams","$212c67a380367559$var$forEach","allOwnKeys","getOwnPropertyNames","$212c67a380367559$var$findKey","_key","$212c67a380367559$var$_global","globalThis","$parcel$global","$212c67a380367559$var$isContextDefined","$212c67a380367559$var$isTypedArray","TypedArray","Uint8Array","$212c67a380367559$var$isHTMLForm","$212c67a380367559$var$hasOwnProperty","prop","$212c67a380367559$var$isRegExp","$212c67a380367559$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","$212c67a380367559$var$ALPHABET","ALPHA_DIGIT","toUpperCase","$212c67a380367559$var$isAsyncFn","$212c67a380367559$export$9099ad97b570f7c","isBuffer","kind","FormData","append","ArrayBuffer","isView","buffer","pipe","$212c67a380367559$var$merge","caseless","assignValue","targetKey","$2e6c5327995c9264$export$9099ad97b570f7c","trim","content","superConstructor","props","sourceObj","destObj","propFilter","merged","searchString","next","pair","regExp","hasOwnProp","enumerable","arrayOrString","delimiter","p2","defaultValue","alphabet","random","visit","reducedValue","$9ae23e0ce2e264b3$var$AxiosError","message","config","request","captureStackTrace","inherits","description","number","fileName","lineNumber","columnNumber","toJSONObject","$9ae23e0ce2e264b3$var$prototype","$9ae23e0ce2e264b3$var$descriptors","customProps","axiosError","toFlatObject","cause","$1aac450f4332c95b$export$74954538e33d2f49","$7627fc776ad3b33a$export$297b58465abed6df","$7627fc776ad3b33a$export$2367b5e7922a95be","$9ae23e0ce2e264b3$export$9099ad97b570f7c","b64","lens","$7627fc776ad3b33a$var$getLens","validLen","placeHoldersLen","$7627fc776ad3b33a$var$Arr","$7627fc776ad3b33a$var$_byteLength","curByte","$7627fc776ad3b33a$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$7627fc776ad3b33a$var$encodeChunk","$7627fc776ad3b33a$var$lookup","$2788d1cf0bdc0b56$export$a9187e77005a4477","$2788d1cf0bdc0b56$export$2c262a1484748b93","$7627fc776ad3b33a$var$code","$7627fc776ad3b33a$var$i","$7627fc776ad3b33a$var$len","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","$1aac450f4332c95b$var$customInspectSymbol","$1aac450f4332c95b$var$Buffer","$1aac450f4332c95b$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","$1aac450f4332c95b$var$allocUnsafe","$1aac450f4332c95b$var$from","string","encoding","isEncoding","$1aac450f4332c95b$var$byteLength","actual","write","$1aac450f4332c95b$var$fromString","arrayView","$1aac450f4332c95b$var$isInstance","copy","$1aac450f4332c95b$var$fromArrayBuffer","byteOffset","byteLength","$1aac450f4332c95b$var$fromArrayLike","$1aac450f4332c95b$var$fromArrayView","SharedArrayBuffer","valueOf","$1aac450f4332c95b$var$checked","$1aac450f4332c95b$var$numberIsNaN","$1aac450f4332c95b$var$fromObject","toPrimitive","$1aac450f4332c95b$var$assertSize","mustMatch","loweredCase","$1aac450f4332c95b$var$utf8ToBytes","$1aac450f4332c95b$var$base64ToBytes","$1aac450f4332c95b$var$slowToString","$1aac450f4332c95b$var$hexSlice","$1aac450f4332c95b$var$utf8Slice","$1aac450f4332c95b$var$asciiSlice","$1aac450f4332c95b$var$latin1Slice","$1aac450f4332c95b$var$base64Slice","$1aac450f4332c95b$var$utf16leSlice","$1aac450f4332c95b$var$swap","$1aac450f4332c95b$var$bidirectionalIndexOf","dir","$1aac450f4332c95b$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$1aac450f4332c95b$var$hexWrite","remaining","strLen","parsed","$1aac450f4332c95b$var$utf8Write","$1aac450f4332c95b$var$blitBuffer","$1aac450f4332c95b$var$asciiWrite","byteArray","$1aac450f4332c95b$var$asciiToBytes","$1aac450f4332c95b$var$base64Write","$1aac450f4332c95b$var$ucs2Write","hi","lo","$1aac450f4332c95b$var$utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$1aac450f4332c95b$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$1aac450f4332c95b$var$typedArraySupport","poolSize","alloc","fill","$1aac450f4332c95b$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","$1aac450f4332c95b$var$hexSliceLookupTable","bytes","$1aac450f4332c95b$var$checkOffset","ext","$1aac450f4332c95b$var$checkInt","$1aac450f4332c95b$var$checkIEEE754","$1aac450f4332c95b$var$writeFloat","littleEndian","noAssert","$1aac450f4332c95b$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$1aac450f4332c95b$var$INVALID_BASE64_RE","leadSurrogate","$1aac450f4332c95b$var$base64clean","dst","table","i16","$000c7d87e4a62a27$var$isVisitable","isPlainObject","$000c7d87e4a62a27$var$removeBrackets","endsWith","$000c7d87e4a62a27$var$renderKey","path","dots","token","$000c7d87e4a62a27$var$predicates","$000c7d87e4a62a27$export$9099ad97b570f7c","formData","isObject","metaTokens","indexes","option","isUndefined","visitor","defaultVisitor","useBlob","Blob","isSpecCompliantForm","isFunction","convertValue","isDate","toISOString","isBlob","isArrayBuffer","isTypedArray","JSON","stringify","$000c7d87e4a62a27$var$isFlatArray","isFileList","toArray","exposedHelpers","build","$eeb45c07d3c90fe9$var$encode","charMap","encodeURIComponent","$eeb45c07d3c90fe9$var$AxiosURLSearchParams","params","_pairs","$eeb45c07d3c90fe9$var$prototype","encoder","_encode","$eeb45c07d3c90fe9$export$9099ad97b570f7c","$f47c97b9ed82a515$var$encode","encode","serializeFn","serialize","serializedParams","isURLSearchParams","hashmarkIndex","$f1ca78cb816f8862$export$9099ad97b570f7c","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","$1bfeba9f6fbf01c1$export$9099ad97b570f7c","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$ea925e465580a2ec$export$9099ad97b570f7c","isBrowser","classes","URLSearchParams","product","importScripts","protocols","$874073148fd6d2f6$export$9099ad97b570f7c","buildPath","isNumericKey","isLast","$874073148fd6d2f6$var$arrayToObject","isFormData","entries","forEachEntry","matchAll","$874073148fd6d2f6$var$parsePropPath","$1cba05ffae77062a$var$defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","isHTMLForm","isStream","isFile","isArrayBufferView","setContentType","helpers","isNode","$75f520885bf20632$export$9099ad97b570f7c","formSerializer","_FormData","env","rawValue","parser","parse","$1cba05ffae77062a$var$stringifySafely","transformResponse","JSONRequested","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","$1cba05ffae77062a$export$9099ad97b570f7c","$8c5f8d9929198423$var$ignoreDuplicateOf","toObjectSet","$f688f9ec5c8dbe55$var$$internals","$f688f9ec5c8dbe55$var$normalizeHeader","header","$f688f9ec5c8dbe55$var$normalizeValue","$f688f9ec5c8dbe55$var$matchHeaderValue","isHeaderNameFilter","isRegExp","$f688f9ec5c8dbe55$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","findKey","setHeaders","headers1","rawHeaders","line","substring","$8c5f8d9929198423$export$9099ad97b570f7c","tokens","tokensRE","$f688f9ec5c8dbe55$var$parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","normalized","char","$f688f9ec5c8dbe55$var$formatHeader","targets","asStrings","computed","accessors","defineAccessor","accessorName","toCamelCase","methodName","arg1","arg2","arg3","configurable","$f688f9ec5c8dbe55$var$buildAccessors","accessor","reduceDescriptors","mapped","headerValue","freezeMethods","$f688f9ec5c8dbe55$export$9099ad97b570f7c","fns","__CANCEL__","$a72fefca065252e5$var$CanceledError","ERR_CANCELED","$a72fefca065252e5$export$9099ad97b570f7c","$694b999bd57429e6$export$9099ad97b570f7c","isStandardBrowserEnv","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","baseURL","requestedURL","relativeURL","$27e3945244f69ec1$export$9099ad97b570f7c","$efbfd7cb55bd3d39$export$9099ad97b570f7c","msie","urlParsingNode","originURL","resolveURL","href","protocol","hash","hostname","port","pathname","charAt","location","requestURL","$cb302e248ecba18d$export$9099ad97b570f7c","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","$a569b0d14e7d5f6c$var$progressEventReducer","isDownloadStream","bytesNotified","_speedometer","total","lengthComputable","progressBytes","rate","estimated","$9a85bf857771bab5$var$knownAdapters","http","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","isStandardBrowserWebWorkerEnv","auth","username","password","unescape","btoa","fullPath","$e6fd2984e458e31c$export$9099ad97b570f7c","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","$2aa65c644fa0efbd$export$9099ad97b570f7c","statusText","$f47c97b9ed82a515$export$9099ad97b570f7c","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","$b3c9c7e3818d330f$export$9099ad97b570f7c","$9a85bf857771bab5$var$renderReason","reason","$9a85bf857771bab5$var$isResolvedHandle","$9a85bf857771bab5$export$9099ad97b570f7c","adapters","nameOrAdapter","rejectedReasons","reasons","$3dd3f9a01777c9b3$var$throwIfCancellationRequested","throwIfRequested","$5f0d84dcccabf6d3$export$9099ad97b570f7c","$6741675452fa930b$export$9099ad97b570f7c","$f427df3793ea0dfb$var$headersToObject","config1","config2","getMergedValue","merge","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$63048a22396a4600$var$validators","$63048a22396a4600$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","$63048a22396a4600$export$9099ad97b570f7c","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$f26911cd5b02fa1c$var$validators","validators","$f26911cd5b02fa1c$var$Axios","instanceConfig","defaults","interceptors","configOrUrl","$f427df3793ea0dfb$export$9099ad97b570f7c","assertOptions","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","$3dd3f9a01777c9b3$export$9099ad97b570f7c","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","$f26911cd5b02fa1c$export$9099ad97b570f7c","$5f70b77111eec3c4$var$CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","cancel1","$5f70b77111eec3c4$export$9099ad97b570f7c","$ead6a23b82f689d3$var$HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","$ead6a23b82f689d3$export$9099ad97b570f7c","$2f7370a015f9c7ae$var$axios","$2f7370a015f9c7ae$var$createInstance","defaultConfig","instance","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","promises","spread","isAxiosError","payload","mergeConfig","AxiosHeaders","formToJSON","getAdapter","HttpStatusCode","default","$2f7370a015f9c7ae$export$9099ad97b570f7c","$618c64b4fc248377$export$61ee696cc3cb767c","$618c64b4fc248377$export$5a4ea5710f560276","$618c64b4fc248377$export$a82b25881525d042","$618c64b4fc248377$export$f9ab0ef0b3d83e07","$618c64b4fc248377$export$9c4c3620fae35571","$618c64b4fc248377$export$f2eb173e8f6e4130","$618c64b4fc248377$export$8dbdea330bbd6b3c","$618c64b4fc248377$export$ac2fd7e1ad209aef","$618c64b4fc248377$export$4ec1510eb4a6dd07","$618c64b4fc248377$export$a7171b34fcfc6c98","$618c64b4fc248377$export$579ff91c4a4eeec","$618c64b4fc248377$export$620a0a523ccfadc1","$618c64b4fc248377$export$e996b35735a9209a","$618c64b4fc248377$export$3841b31146d147e6","$618c64b4fc248377$export$8d171d58269c6b98","$618c64b4fc248377$export$1a12ca45983761be","$e12c8bb44acdd73c$var$ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$e12c8bb44acdd73c$export$9099ad97b570f7c","$b30624b926c21759$export$55029509b82b2e2b","$1930bd353b5dd973$var$RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","$1930bd353b5dd973$export$9099ad97b570f7c","$bf4e1aa287034bcd$var$CircleStyle","setRadius","$bf4e1aa287034bcd$export$9099ad97b570f7c","$2977a884eb0897b3$var$Fill","color_","setColor","$2977a884eb0897b3$export$9099ad97b570f7c","$2051e0d06771d465$var$Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$2051e0d06771d465$export$9099ad97b570f7c","$2bbb9f7aac5f2c94$var$Style","geometryFunction_","$2bbb9f7aac5f2c94$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","$2bbb9f7aac5f2c94$var$defaultStyles","$2bbb9f7aac5f2c94$export$33d0043adf82cc14","$2bbb9f7aac5f2c94$export$9099ad97b570f7c","$e40ce0ac0e40cff8$var$taintedTestContext","$e40ce0ac0e40cff8$var$IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","image1","$e3932ef79b782730$var$calculateScale","wantedWidth","wantedHeight","$e3932ef79b782730$var$Icon","scale1","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","cacheKey","iconImage_","crossOrigin1","imageState1","color1","$e40ce0ac0e40cff8$export$7eb84799c931fe91","offset_","offsetOrigin_","offsetOrigin","initialOptions_","imageSize","setAnchor","iconImageSize","$e3932ef79b782730$export$9099ad97b570f7c","$f56b5bf3c43f068e$var$Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$f56b5bf3c43f068e$export$9099ad97b570f7c","$bf0e3eb194184f4d$var$numTypes","$bf0e3eb194184f4d$export$a04479c6764fba36","$bf0e3eb194184f4d$export$20d4db7e4693d97e","$bf0e3eb194184f4d$export$8ec24df1de2b7ad0","$bf0e3eb194184f4d$export$4538625949ac97b4","$bf0e3eb194184f4d$export$aa61023351754e9e","$bf0e3eb194184f4d$export$88a2bdda3c2346e9","$bf0e3eb194184f4d$var$typeNames","$bf0e3eb194184f4d$var$namedTypes","$bf0e3eb194184f4d$export$9e94737c67f23a95","names","namedType","specific","$bf0e3eb194184f4d$export$65e28083b9ef8cf0","oneType","otherType","$bf0e3eb194184f4d$export$7057bb3991dcb656","$bf0e3eb194184f4d$export$5a5441450e88ddd5","type1","operator","$bf0e3eb194184f4d$export$340c65b6bbbe07df","variables","$bf0e3eb194184f4d$export$a43e9d683f52ab7c","encoded","operator1","$bf0e3eb194184f4d$var$parsers","$bf0e3eb194184f4d$var$parseCallExpression","type2","$bf0e3eb194184f4d$export$b55b3ce1e61a29e6","$bf0e3eb194184f4d$var$createParser","$bf0e3eb194184f4d$var$withArgs","operation","minArgs","maxArgs","argType","argCount","args1","expression","gotType","expectedType","argValidator","returnType","$5fbc0e2d657a90cb$export$dfcfb962b124097d","expected","$5fbc0e2d657a90cb$var$compileExpression","context1","$5fbc0e2d657a90cb$var$compileAssertionExpression","nameExpression","$5fbc0e2d657a90cb$var$compileAccessorExpression","op","$5fbc0e2d657a90cb$var$compileLogicalExpression","$5fbc0e2d657a90cb$var$compileComparisonExpression","$5fbc0e2d657a90cb$var$compileNumericExpression","$5fbc0e2d657a90cb$var$compileMatchExpression","$c41e1ebb2ca13450$var$always","$c41e1ebb2ca13450$export$8182eff27a6c7483","rules","evaluator","compiledRules","rule","styleLength","$c41e1ebb2ca13450$export$7d3f96041d3be9cc","someMatched","filterEvaluator","else","styleEvaluator","$c41e1ebb2ca13450$export$fa28442e279cf932","evaluationContext","$c41e1ebb2ca13450$export$9c38bdf99a173de8","flatStyles","parsingContext","evaluators","flatStyle","evaluateFill","$c41e1ebb2ca13450$var$buildFill","evaluateStroke","$c41e1ebb2ca13450$var$buildStroke","evaluateText","prefix","evaluateValue","$c41e1ebb2ca13450$var$stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","$c41e1ebb2ca13450$var$numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","$c41e1ebb2ca13450$var$booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","$c41e1ebb2ca13450$var$sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","$c41e1ebb2ca13450$var$numberArrayEvaluator","$c41e1ebb2ca13450$var$buildText","evaluateImage","srcName","$c41e1ebb2ca13450$var$requireString","evaluateAnchor","$c41e1ebb2ca13450$var$coordinateEvaluator","evaluateOpacity","evaluateDisplacement","$c41e1ebb2ca13450$var$optionalIconOrigin","$c41e1ebb2ca13450$var$optionalIconAnchorUnits","$c41e1ebb2ca13450$var$requireColorLike","$c41e1ebb2ca13450$var$optionalColorLike","$c41e1ebb2ca13450$var$optionalString","$c41e1ebb2ca13450$var$requireNumberArray","$c41e1ebb2ca13450$var$optionalNumberArray","$c41e1ebb2ca13450$var$optionalNumber","$c41e1ebb2ca13450$var$optionalSize","$c41e1ebb2ca13450$var$optionalDeclutterMode","icon","$c41e1ebb2ca13450$var$buildIcon","pointsName","$c41e1ebb2ca13450$var$requireNumber","shape","$c41e1ebb2ca13450$var$buildShape","evaluateRadius","circle","$c41e1ebb2ca13450$var$buildCircle","$c41e1ebb2ca13450$var$buildImage","evaluateZIndex","empty","evaluateColor","$c41e1ebb2ca13450$var$colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","$c41e1ebb2ca13450$var$requireSizeLike","$94242b274ad2f2ed$var$Property","$94242b274ad2f2ed$export$9099ad97b570f7c","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$94242b274ad2f2ed$var$toStyleLike","styleFunction","$2bbb9f7aac5f2c94$export$4aaa4bacaec09e94","$df0635a74a7822e1$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$df0635a74a7822e1$export$c649c04369bd3370","$df0635a74a7822e1$export$2513c58bc344fc5c","$df0635a74a7822e1$export$84e3c67fd41b07f5","$df0635a74a7822e1$export$6cd4b1e0c0e7240c","$df0635a74a7822e1$export$9099ad97b570f7c","$4d95c64ce828af6b$export$9099ad97b570f7c","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$602faaef6592ac32$export$9099ad97b570f7c","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","pixelRatio1","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1629b032c2c05b7a$export$9099ad97b570f7c","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$8503ee84237976ea$export$9099ad97b570f7c","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$0537f4f8a36c0b60$export$9099ad97b570f7c","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","tolerance1","$bc16bdd57fdcbba7$export$727907b347f8131a","chunks","cursor","chunkM","currentChunk","missing","$cc27ec6f48b585fa$export$e8c34bbbade92a3a","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","$d4f3e170528ef1db$export$3964e67694391753","$ad370384483cb7cc$var$BATCH_CONSTRUCTORS","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$ad370384483cb7cc$export$9099ad97b570f7c","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$2ec7b6c5a4a595c6$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","$2c5e6ed7a2421d9f$export$7326ac1b36a49776","$fbecb62010b6a32d$var$tmpExtent","$fbecb62010b6a32d$var$p1","$fbecb62010b6a32d$var$p2","$fbecb62010b6a32d$var$p3","$fbecb62010b6a32d$var$p4","$fbecb62010b6a32d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$fbecb62010b6a32d$var$rtlRegEx","$fbecb62010b6a32d$var$horizontalTextAlign","align","$fbecb62010b6a32d$var$createTextChunks","acc","$fbecb62010b6a32d$export$9099ad97b570f7c","instructions1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","$3f8842a01a05d29f$export$1e20a6b365130d8c","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","$93b70df51285fcd1$var$ORDER","$93b70df51285fcd1$var$circlePixelIndexArrayCache","$93b70df51285fcd1$export$9099ad97b570f7c","resolution1","allInstructions1","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","allInstructions","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","$93b70df51285fcd1$export$f610334c339a4991","imageData","idx","maxExtent1","builderTypes","$699b1a7f567cffb4$export$9099ad97b570f7c","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","$7e268a797fd34dbd$export$36912b83e488cd77","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$73cf95c6d003b56f$var$GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$73cf95c6d003b56f$export$65a5cfeed6fd0c33","$73cf95c6d003b56f$export$f0ea347488340e3d","$73cf95c6d003b56f$export$522dfd100dd96ba1","$73cf95c6d003b56f$var$renderGeometry","$73cf95c6d003b56f$var$renderFeatureInternal","getGeometries","$b2ab5ea43be4855f$export$9099ad97b570f7c","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","$ea4701d35a7bcfcb$export$e7468c0ae08395df","clipped","transforms","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","geometry1","zIndexKeys","geomAndStyle","kk","$ce4b2e7cdf1ad653$export$9fd146a6491490e3","resultFeatures","$ce4b2e7cdf1ad653$export$57fd269e987b81b8","executorGroups","vectorLayer1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","userExtent","$73cf95c6d003b56f$export$f3b3f9822f340683","dirty","renderFeature","replayGroupInstructions","$d16efd1165653604$export$9099ad97b570f7c","$0c7c468abb426e87$var$container","$0c7c468abb426e87$var$content","$0c7c468abb426e87$var$closer","$0c7c468abb426e87$var$infoModal","$0c7c468abb426e87$var$infoButton","$0c7c468abb426e87$var$munros","$0c7c468abb426e87$var$bgLayer","onclick","$0c7c468abb426e87$var$map","$0c7c468abb426e87$var$setupPopup","$0c7c468abb426e87$var$popup","autoPanAnimation","blur","munroDetails","region","latlng_lat","latlng_lng","gridref_letters","gridref_eastings","gridref_northings","meaning","$0c7c468abb426e87$var$munroStyle","munro","munroFeature","$0c7c468abb426e87$var$buildMunroFeature","munroLayer"],"version":3,"file":"index.48b5c192.js.map"}